//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegOnline.RegressionTest.Fixtures.API.LoginService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://www.regonline.com/webservices/", ConfigurationName="LoginService.LoginSoap")]
    public interface LoginSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.regonline.com/webservices/isValidUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RegOnline.RegressionTest.Fixtures.API.LoginService.RegOnlineResponseOfInt32 isValidUser(string UserName, string Password);
        
        // CODEGEN: Generating message contract since message GetCustomerIdIfAuthorizedRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="https://www.regonline.com/webservices/GetCustomerIdIfAuthorized", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedResponse GetCustomerIdIfAuthorized(RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://www.regonline.com/webservices/")]
    public partial class RegOnlineResponseOfInt32 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int valueField;
        
        private ResponseStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ResponseStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.regonline.com/webservices/")]
    public partial class ResponseStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string errorMessageField;
        
        private int errorCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.regonline.com/webservices/")]
    public partial class AuthenticationHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
                this.RaisePropertyChanged("UserName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerIdIfAuthorized", WrapperNamespace="https://www.regonline.com/webservices/", IsWrapped=true)]
    public partial class GetCustomerIdIfAuthorizedRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.regonline.com/webservices/")]
        public RegOnline.RegressionTest.Fixtures.API.LoginService.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.regonline.com/webservices/", Order=0)]
        public int eventId;
        
        public GetCustomerIdIfAuthorizedRequest() {
        }
        
        public GetCustomerIdIfAuthorizedRequest(RegOnline.RegressionTest.Fixtures.API.LoginService.AuthenticationHeader AuthenticationHeader, int eventId) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.eventId = eventId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCustomerIdIfAuthorizedResponse", WrapperNamespace="https://www.regonline.com/webservices/", IsWrapped=true)]
    public partial class GetCustomerIdIfAuthorizedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.regonline.com/webservices/", Order=0)]
        public RegOnline.RegressionTest.Fixtures.API.LoginService.RegOnlineResponseOfInt32 GetCustomerIdIfAuthorizedResult;
        
        public GetCustomerIdIfAuthorizedResponse() {
        }
        
        public GetCustomerIdIfAuthorizedResponse(RegOnline.RegressionTest.Fixtures.API.LoginService.RegOnlineResponseOfInt32 GetCustomerIdIfAuthorizedResult) {
            this.GetCustomerIdIfAuthorizedResult = GetCustomerIdIfAuthorizedResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LoginSoapChannel : RegOnline.RegressionTest.Fixtures.API.LoginService.LoginSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginSoapClient : System.ServiceModel.ClientBase<RegOnline.RegressionTest.Fixtures.API.LoginService.LoginSoap>, RegOnline.RegressionTest.Fixtures.API.LoginService.LoginSoap {
        
        public LoginSoapClient() {
        }
        
        public LoginSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RegOnline.RegressionTest.Fixtures.API.LoginService.RegOnlineResponseOfInt32 isValidUser(string UserName, string Password) {
            return base.Channel.isValidUser(UserName, Password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedResponse RegOnline.RegressionTest.Fixtures.API.LoginService.LoginSoap.GetCustomerIdIfAuthorized(RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedRequest request) {
            return base.Channel.GetCustomerIdIfAuthorized(request);
        }
        
        public RegOnline.RegressionTest.Fixtures.API.LoginService.RegOnlineResponseOfInt32 GetCustomerIdIfAuthorized(RegOnline.RegressionTest.Fixtures.API.LoginService.AuthenticationHeader AuthenticationHeader, int eventId) {
            RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedRequest inValue = new RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.eventId = eventId;
            RegOnline.RegressionTest.Fixtures.API.LoginService.GetCustomerIdIfAuthorizedResponse retVal = ((RegOnline.RegressionTest.Fixtures.API.LoginService.LoginSoap)(this)).GetCustomerIdIfAuthorized(inValue);
            return retVal.GetCustomerIdIfAuthorizedResult;
        }
    }
}
