//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.269.
// 
#pragma warning disable 1591

namespace RegOnline.RegressionTest.NUnitAddin.SpiraImportExport {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ImportExportSoap", Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteArtifact))]
    public partial class ImportExport : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Project_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProjectRole_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_AddCustomListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_AddCustomListValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_RetrieveCustomPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Project_SaveCustomPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Document_AddFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback Document_AddUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback User_RetrieveByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveForOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveResolutionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_AddResolutionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_AddSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_AddTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_AddStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_AddPriorityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrievePrioritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveSeveritiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Incident_RetrieveStatusesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_Retrieve2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_AddTestMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_RemoveTestMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Release_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_Create1OperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_Create2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_AddTestCoverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_RemoveTestCoverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_RetrieveForOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Requirement_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_RetrieveByReleaseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_RetrieveForOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_RetrieveByTestSetIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_CreateParameterTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCase_AddParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestStep_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestStep_CreateLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestStep_RetrieveByTestCaseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_CreateFromTestCasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_CreateFromTestSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_RecordAutomated1OperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_RecordAutomated2OperationCompleted;
        
        private System.Threading.SendOrPostCallback TestRun_SaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_RetrieveForOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_AddTestMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestSet_RemoveTestMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_RetrieveNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_RetrieveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_RetrieveForOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_RetrieveByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Task_CreateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveFieldValueMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveCustomPropertyMappingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveProjectMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveUserMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_AddUserMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RetrieveArtifactMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_AddArtifactMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataMapping_RemoveArtifactMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomProperty_RetrieveProjectPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetProductVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetServerDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetWebServerUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback System_GetProductNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_Authenticate2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_DisconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback Connection_ConnectToProjectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ImportExport() {
            this.Url = RegOnline.RegressionTest.NUnitAddin.ResultReporter.SpiraTeam.WebServiceUrl;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Project_CreateCompletedEventHandler Project_CreateCompleted;
        
        /// <remarks/>
        public event Project_DeleteCompletedEventHandler Project_DeleteCompleted;
        
        /// <remarks/>
        public event Project_RetrieveCompletedEventHandler Project_RetrieveCompleted;
        
        /// <remarks/>
        public event ProjectRole_RetrieveCompletedEventHandler ProjectRole_RetrieveCompleted;
        
        /// <remarks/>
        public event Project_RetrieveByIdCompletedEventHandler Project_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Project_AddCustomListCompletedEventHandler Project_AddCustomListCompleted;
        
        /// <remarks/>
        public event Project_AddCustomListValueCompletedEventHandler Project_AddCustomListValueCompleted;
        
        /// <remarks/>
        public event Project_RetrieveCustomPropertiesCompletedEventHandler Project_RetrieveCustomPropertiesCompleted;
        
        /// <remarks/>
        public event Project_SaveCustomPropertiesCompletedEventHandler Project_SaveCustomPropertiesCompleted;
        
        /// <remarks/>
        public event Document_AddFileCompletedEventHandler Document_AddFileCompleted;
        
        /// <remarks/>
        public event Document_AddUrlCompletedEventHandler Document_AddUrlCompleted;
        
        /// <remarks/>
        public event User_CreateCompletedEventHandler User_CreateCompleted;
        
        /// <remarks/>
        public event User_RetrieveByIdCompletedEventHandler User_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event User_RetrieveByUserNameCompletedEventHandler User_RetrieveByUserNameCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveCompletedEventHandler Incident_RetrieveCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveNewCompletedEventHandler Incident_RetrieveNewCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveForOwnerCompletedEventHandler Incident_RetrieveForOwnerCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveResolutionsCompletedEventHandler Incident_RetrieveResolutionsCompleted;
        
        /// <remarks/>
        public event Incident_AddResolutionsCompletedEventHandler Incident_AddResolutionsCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveByIdCompletedEventHandler Incident_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Incident_UpdateCompletedEventHandler Incident_UpdateCompleted;
        
        /// <remarks/>
        public event Incident_CreateCompletedEventHandler Incident_CreateCompleted;
        
        /// <remarks/>
        public event Incident_AddSeverityCompletedEventHandler Incident_AddSeverityCompleted;
        
        /// <remarks/>
        public event Incident_AddTypeCompletedEventHandler Incident_AddTypeCompleted;
        
        /// <remarks/>
        public event Incident_AddStatusCompletedEventHandler Incident_AddStatusCompleted;
        
        /// <remarks/>
        public event Incident_AddPriorityCompletedEventHandler Incident_AddPriorityCompleted;
        
        /// <remarks/>
        public event Incident_RetrievePrioritiesCompletedEventHandler Incident_RetrievePrioritiesCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveSeveritiesCompletedEventHandler Incident_RetrieveSeveritiesCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveTypesCompletedEventHandler Incident_RetrieveTypesCompleted;
        
        /// <remarks/>
        public event Incident_RetrieveStatusesCompletedEventHandler Incident_RetrieveStatusesCompleted;
        
        /// <remarks/>
        public event Release_RetrieveCompletedEventHandler Release_RetrieveCompleted;
        
        /// <remarks/>
        public event Release_Retrieve2CompletedEventHandler Release_Retrieve2Completed;
        
        /// <remarks/>
        public event Release_RetrieveByIdCompletedEventHandler Release_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Release_UpdateCompletedEventHandler Release_UpdateCompleted;
        
        /// <remarks/>
        public event Release_AddTestMappingCompletedEventHandler Release_AddTestMappingCompleted;
        
        /// <remarks/>
        public event Release_RemoveTestMappingCompletedEventHandler Release_RemoveTestMappingCompleted;
        
        /// <remarks/>
        public event Release_CreateCompletedEventHandler Release_CreateCompleted;
        
        /// <remarks/>
        public event Requirement_Create1CompletedEventHandler Requirement_Create1Completed;
        
        /// <remarks/>
        public event Requirement_Create2CompletedEventHandler Requirement_Create2Completed;
        
        /// <remarks/>
        public event Requirement_AddTestCoverageCompletedEventHandler Requirement_AddTestCoverageCompleted;
        
        /// <remarks/>
        public event Requirement_RemoveTestCoverageCompletedEventHandler Requirement_RemoveTestCoverageCompleted;
        
        /// <remarks/>
        public event Requirement_RetrieveForOwnerCompletedEventHandler Requirement_RetrieveForOwnerCompleted;
        
        /// <remarks/>
        public event Requirement_RetrieveByIdCompletedEventHandler Requirement_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Requirement_RetrieveCompletedEventHandler Requirement_RetrieveCompleted;
        
        /// <remarks/>
        public event Requirement_UpdateCompletedEventHandler Requirement_UpdateCompleted;
        
        /// <remarks/>
        public event TestCase_CreateFolderCompletedEventHandler TestCase_CreateFolderCompleted;
        
        /// <remarks/>
        public event TestCase_CreateCompletedEventHandler TestCase_CreateCompleted;
        
        /// <remarks/>
        public event TestCase_RetrieveCompletedEventHandler TestCase_RetrieveCompleted;
        
        /// <remarks/>
        public event TestCase_RetrieveByReleaseIdCompletedEventHandler TestCase_RetrieveByReleaseIdCompleted;
        
        /// <remarks/>
        public event TestCase_RetrieveForOwnerCompletedEventHandler TestCase_RetrieveForOwnerCompleted;
        
        /// <remarks/>
        public event TestCase_RetrieveByIdCompletedEventHandler TestCase_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event TestCase_RetrieveByTestSetIdCompletedEventHandler TestCase_RetrieveByTestSetIdCompleted;
        
        /// <remarks/>
        public event TestCase_UpdateCompletedEventHandler TestCase_UpdateCompleted;
        
        /// <remarks/>
        public event TestCase_CreateParameterTokenCompletedEventHandler TestCase_CreateParameterTokenCompleted;
        
        /// <remarks/>
        public event TestCase_AddParameterCompletedEventHandler TestCase_AddParameterCompleted;
        
        /// <remarks/>
        public event TestStep_CreateCompletedEventHandler TestStep_CreateCompleted;
        
        /// <remarks/>
        public event TestStep_CreateLinkCompletedEventHandler TestStep_CreateLinkCompleted;
        
        /// <remarks/>
        public event TestStep_RetrieveByTestCaseIdCompletedEventHandler TestStep_RetrieveByTestCaseIdCompleted;
        
        /// <remarks/>
        public event TestRun_CreateFromTestCasesCompletedEventHandler TestRun_CreateFromTestCasesCompleted;
        
        /// <remarks/>
        public event TestRun_CreateFromTestSetCompletedEventHandler TestRun_CreateFromTestSetCompleted;
        
        /// <remarks/>
        public event TestRun_RetrieveCompletedEventHandler TestRun_RetrieveCompleted;
        
        /// <remarks/>
        public event TestRun_RetrieveByIdCompletedEventHandler TestRun_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event TestRun_RecordAutomated1CompletedEventHandler TestRun_RecordAutomated1Completed;
        
        /// <remarks/>
        public event TestRun_RecordAutomated2CompletedEventHandler TestRun_RecordAutomated2Completed;
        
        /// <remarks/>
        public event TestRun_SaveCompletedEventHandler TestRun_SaveCompleted;
        
        /// <remarks/>
        public event TestSet_CreateFolderCompletedEventHandler TestSet_CreateFolderCompleted;
        
        /// <remarks/>
        public event TestSet_CreateCompletedEventHandler TestSet_CreateCompleted;
        
        /// <remarks/>
        public event TestSet_RetrieveCompletedEventHandler TestSet_RetrieveCompleted;
        
        /// <remarks/>
        public event TestSet_RetrieveForOwnerCompletedEventHandler TestSet_RetrieveForOwnerCompleted;
        
        /// <remarks/>
        public event TestSet_RetrieveByIdCompletedEventHandler TestSet_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event TestSet_UpdateCompletedEventHandler TestSet_UpdateCompleted;
        
        /// <remarks/>
        public event TestSet_AddTestMappingCompletedEventHandler TestSet_AddTestMappingCompleted;
        
        /// <remarks/>
        public event TestSet_RemoveTestMappingCompletedEventHandler TestSet_RemoveTestMappingCompleted;
        
        /// <remarks/>
        public event Task_RetrieveNewCompletedEventHandler Task_RetrieveNewCompleted;
        
        /// <remarks/>
        public event Task_RetrieveCompletedEventHandler Task_RetrieveCompleted;
        
        /// <remarks/>
        public event Task_RetrieveForOwnerCompletedEventHandler Task_RetrieveForOwnerCompleted;
        
        /// <remarks/>
        public event Task_RetrieveByIdCompletedEventHandler Task_RetrieveByIdCompleted;
        
        /// <remarks/>
        public event Task_UpdateCompletedEventHandler Task_UpdateCompleted;
        
        /// <remarks/>
        public event Task_CreateCompletedEventHandler Task_CreateCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveFieldValueMappingsCompletedEventHandler DataMapping_RetrieveFieldValueMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveCustomPropertyMappingCompletedEventHandler DataMapping_RetrieveCustomPropertyMappingCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventHandler DataMapping_RetrieveCustomPropertyValueMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveProjectMappingsCompletedEventHandler DataMapping_RetrieveProjectMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveUserMappingsCompletedEventHandler DataMapping_RetrieveUserMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_AddUserMappingsCompletedEventHandler DataMapping_AddUserMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RetrieveArtifactMappingsCompletedEventHandler DataMapping_RetrieveArtifactMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_AddArtifactMappingsCompletedEventHandler DataMapping_AddArtifactMappingsCompleted;
        
        /// <remarks/>
        public event DataMapping_RemoveArtifactMappingsCompletedEventHandler DataMapping_RemoveArtifactMappingsCompleted;
        
        /// <remarks/>
        public event CustomProperty_RetrieveProjectPropertiesCompletedEventHandler CustomProperty_RetrieveProjectPropertiesCompleted;
        
        /// <remarks/>
        public event System_GetProductVersionCompletedEventHandler System_GetProductVersionCompleted;
        
        /// <remarks/>
        public event System_GetSettingsCompletedEventHandler System_GetSettingsCompleted;
        
        /// <remarks/>
        public event System_GetServerDateTimeCompletedEventHandler System_GetServerDateTimeCompleted;
        
        /// <remarks/>
        public event System_GetWebServerUrlCompletedEventHandler System_GetWebServerUrlCompleted;
        
        /// <remarks/>
        public event System_GetProductNameCompletedEventHandler System_GetProductNameCompleted;
        
        /// <remarks/>
        public event Connection_AuthenticateCompletedEventHandler Connection_AuthenticateCompleted;
        
        /// <remarks/>
        public event Connection_Authenticate2CompletedEventHandler Connection_Authenticate2Completed;
        
        /// <remarks/>
        public event Connection_DisconnectCompletedEventHandler Connection_DisconnectCompleted;
        
        /// <remarks/>
        public event Connection_ConnectToProjectCompletedEventHandler Connection_ConnectToProjectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteProject Project_Create(RemoteProject remoteProject, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> existingProjectId) {
            object[] results = this.Invoke("Project_Create", new object[] {
                        remoteProject,
                        existingProjectId});
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        public void Project_CreateAsync(RemoteProject remoteProject, System.Nullable<int> existingProjectId) {
            this.Project_CreateAsync(remoteProject, existingProjectId, null);
        }
        
        /// <remarks/>
        public void Project_CreateAsync(RemoteProject remoteProject, System.Nullable<int> existingProjectId, object userState) {
            if ((this.Project_CreateOperationCompleted == null)) {
                this.Project_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_CreateOperationCompleted);
            }
            this.InvokeAsync("Project_Create", new object[] {
                        remoteProject,
                        existingProjectId}, this.Project_CreateOperationCompleted, userState);
        }
        
        private void OnProject_CreateOperationCompleted(object arg) {
            if ((this.Project_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_CreateCompleted(this, new Project_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_Delete", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Project_Delete(int projectId) {
            this.Invoke("Project_Delete", new object[] {
                        projectId});
        }
        
        /// <remarks/>
        public void Project_DeleteAsync(int projectId) {
            this.Project_DeleteAsync(projectId, null);
        }
        
        /// <remarks/>
        public void Project_DeleteAsync(int projectId, object userState) {
            if ((this.Project_DeleteOperationCompleted == null)) {
                this.Project_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_DeleteOperationCompleted);
            }
            this.InvokeAsync("Project_Delete", new object[] {
                        projectId}, this.Project_DeleteOperationCompleted, userState);
        }
        
        private void OnProject_DeleteOperationCompleted(object arg) {
            if ((this.Project_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteProject[] Project_Retrieve() {
            object[] results = this.Invoke("Project_Retrieve", new object[0]);
            return ((RemoteProject[])(results[0]));
        }
        
        /// <remarks/>
        public void Project_RetrieveAsync() {
            this.Project_RetrieveAsync(null);
        }
        
        /// <remarks/>
        public void Project_RetrieveAsync(object userState) {
            if ((this.Project_RetrieveOperationCompleted == null)) {
                this.Project_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Project_Retrieve", new object[0], this.Project_RetrieveOperationCompleted, userState);
        }
        
        private void OnProject_RetrieveOperationCompleted(object arg) {
            if ((this.Project_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_RetrieveCompleted(this, new Project_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/ProjectRole_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteProjectRole[] ProjectRole_Retrieve() {
            object[] results = this.Invoke("ProjectRole_Retrieve", new object[0]);
            return ((RemoteProjectRole[])(results[0]));
        }
        
        /// <remarks/>
        public void ProjectRole_RetrieveAsync() {
            this.ProjectRole_RetrieveAsync(null);
        }
        
        /// <remarks/>
        public void ProjectRole_RetrieveAsync(object userState) {
            if ((this.ProjectRole_RetrieveOperationCompleted == null)) {
                this.ProjectRole_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProjectRole_RetrieveOperationCompleted);
            }
            this.InvokeAsync("ProjectRole_Retrieve", new object[0], this.ProjectRole_RetrieveOperationCompleted, userState);
        }
        
        private void OnProjectRole_RetrieveOperationCompleted(object arg) {
            if ((this.ProjectRole_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProjectRole_RetrieveCompleted(this, new ProjectRole_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteProject Project_RetrieveById(int projectId) {
            object[] results = this.Invoke("Project_RetrieveById", new object[] {
                        projectId});
            return ((RemoteProject)(results[0]));
        }
        
        /// <remarks/>
        public void Project_RetrieveByIdAsync(int projectId) {
            this.Project_RetrieveByIdAsync(projectId, null);
        }
        
        /// <remarks/>
        public void Project_RetrieveByIdAsync(int projectId, object userState) {
            if ((this.Project_RetrieveByIdOperationCompleted == null)) {
                this.Project_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Project_RetrieveById", new object[] {
                        projectId}, this.Project_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnProject_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Project_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_RetrieveByIdCompleted(this, new Project_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_AddCustomList", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteCustomList Project_AddCustomList(RemoteCustomList remoteCustomList) {
            object[] results = this.Invoke("Project_AddCustomList", new object[] {
                        remoteCustomList});
            return ((RemoteCustomList)(results[0]));
        }
        
        /// <remarks/>
        public void Project_AddCustomListAsync(RemoteCustomList remoteCustomList) {
            this.Project_AddCustomListAsync(remoteCustomList, null);
        }
        
        /// <remarks/>
        public void Project_AddCustomListAsync(RemoteCustomList remoteCustomList, object userState) {
            if ((this.Project_AddCustomListOperationCompleted == null)) {
                this.Project_AddCustomListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_AddCustomListOperationCompleted);
            }
            this.InvokeAsync("Project_AddCustomList", new object[] {
                        remoteCustomList}, this.Project_AddCustomListOperationCompleted, userState);
        }
        
        private void OnProject_AddCustomListOperationCompleted(object arg) {
            if ((this.Project_AddCustomListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_AddCustomListCompleted(this, new Project_AddCustomListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_AddCustomListValue", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteCustomListValue Project_AddCustomListValue(RemoteCustomListValue remoteCustomListValue) {
            object[] results = this.Invoke("Project_AddCustomListValue", new object[] {
                        remoteCustomListValue});
            return ((RemoteCustomListValue)(results[0]));
        }
        
        /// <remarks/>
        public void Project_AddCustomListValueAsync(RemoteCustomListValue remoteCustomListValue) {
            this.Project_AddCustomListValueAsync(remoteCustomListValue, null);
        }
        
        /// <remarks/>
        public void Project_AddCustomListValueAsync(RemoteCustomListValue remoteCustomListValue, object userState) {
            if ((this.Project_AddCustomListValueOperationCompleted == null)) {
                this.Project_AddCustomListValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_AddCustomListValueOperationCompleted);
            }
            this.InvokeAsync("Project_AddCustomListValue", new object[] {
                        remoteCustomListValue}, this.Project_AddCustomListValueOperationCompleted, userState);
        }
        
        private void OnProject_AddCustomListValueOperationCompleted(object arg) {
            if ((this.Project_AddCustomListValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_AddCustomListValueCompleted(this, new Project_AddCustomListValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_RetrieveCustomProperties" +
            "", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteProjectCustomProperty[] Project_RetrieveCustomProperties(int artifactTypeId) {
            object[] results = this.Invoke("Project_RetrieveCustomProperties", new object[] {
                        artifactTypeId});
            return ((RemoteProjectCustomProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void Project_RetrieveCustomPropertiesAsync(int artifactTypeId) {
            this.Project_RetrieveCustomPropertiesAsync(artifactTypeId, null);
        }
        
        /// <remarks/>
        public void Project_RetrieveCustomPropertiesAsync(int artifactTypeId, object userState) {
            if ((this.Project_RetrieveCustomPropertiesOperationCompleted == null)) {
                this.Project_RetrieveCustomPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_RetrieveCustomPropertiesOperationCompleted);
            }
            this.InvokeAsync("Project_RetrieveCustomProperties", new object[] {
                        artifactTypeId}, this.Project_RetrieveCustomPropertiesOperationCompleted, userState);
        }
        
        private void OnProject_RetrieveCustomPropertiesOperationCompleted(object arg) {
            if ((this.Project_RetrieveCustomPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_RetrieveCustomPropertiesCompleted(this, new Project_RetrieveCustomPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Project_SaveCustomProperties", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Project_SaveCustomProperties(int artifactTypeId, RemoteProjectCustomProperty[] remoteProjectCustomProperties) {
            this.Invoke("Project_SaveCustomProperties", new object[] {
                        artifactTypeId,
                        remoteProjectCustomProperties});
        }
        
        /// <remarks/>
        public void Project_SaveCustomPropertiesAsync(int artifactTypeId, RemoteProjectCustomProperty[] remoteProjectCustomProperties) {
            this.Project_SaveCustomPropertiesAsync(artifactTypeId, remoteProjectCustomProperties, null);
        }
        
        /// <remarks/>
        public void Project_SaveCustomPropertiesAsync(int artifactTypeId, RemoteProjectCustomProperty[] remoteProjectCustomProperties, object userState) {
            if ((this.Project_SaveCustomPropertiesOperationCompleted == null)) {
                this.Project_SaveCustomPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProject_SaveCustomPropertiesOperationCompleted);
            }
            this.InvokeAsync("Project_SaveCustomProperties", new object[] {
                        artifactTypeId,
                        remoteProjectCustomProperties}, this.Project_SaveCustomPropertiesOperationCompleted, userState);
        }
        
        private void OnProject_SaveCustomPropertiesOperationCompleted(object arg) {
            if ((this.Project_SaveCustomPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Project_SaveCustomPropertiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Document_AddFile", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDocument Document_AddFile(RemoteDocument remoteDocument, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] binaryData) {
            object[] results = this.Invoke("Document_AddFile", new object[] {
                        remoteDocument,
                        binaryData});
            return ((RemoteDocument)(results[0]));
        }
        
        /// <remarks/>
        public void Document_AddFileAsync(RemoteDocument remoteDocument, byte[] binaryData) {
            this.Document_AddFileAsync(remoteDocument, binaryData, null);
        }
        
        /// <remarks/>
        public void Document_AddFileAsync(RemoteDocument remoteDocument, byte[] binaryData, object userState) {
            if ((this.Document_AddFileOperationCompleted == null)) {
                this.Document_AddFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocument_AddFileOperationCompleted);
            }
            this.InvokeAsync("Document_AddFile", new object[] {
                        remoteDocument,
                        binaryData}, this.Document_AddFileOperationCompleted, userState);
        }
        
        private void OnDocument_AddFileOperationCompleted(object arg) {
            if ((this.Document_AddFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Document_AddFileCompleted(this, new Document_AddFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Document_AddUrl", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDocument Document_AddUrl(RemoteDocument remoteDocument) {
            object[] results = this.Invoke("Document_AddUrl", new object[] {
                        remoteDocument});
            return ((RemoteDocument)(results[0]));
        }
        
        /// <remarks/>
        public void Document_AddUrlAsync(RemoteDocument remoteDocument) {
            this.Document_AddUrlAsync(remoteDocument, null);
        }
        
        /// <remarks/>
        public void Document_AddUrlAsync(RemoteDocument remoteDocument, object userState) {
            if ((this.Document_AddUrlOperationCompleted == null)) {
                this.Document_AddUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocument_AddUrlOperationCompleted);
            }
            this.InvokeAsync("Document_AddUrl", new object[] {
                        remoteDocument}, this.Document_AddUrlOperationCompleted, userState);
        }
        
        private void OnDocument_AddUrlOperationCompleted(object arg) {
            if ((this.Document_AddUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Document_AddUrlCompleted(this, new Document_AddUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/User_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteUser User_Create(RemoteUser remoteUser, int projectRoleId) {
            object[] results = this.Invoke("User_Create", new object[] {
                        remoteUser,
                        projectRoleId});
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        public void User_CreateAsync(RemoteUser remoteUser, int projectRoleId) {
            this.User_CreateAsync(remoteUser, projectRoleId, null);
        }
        
        /// <remarks/>
        public void User_CreateAsync(RemoteUser remoteUser, int projectRoleId, object userState) {
            if ((this.User_CreateOperationCompleted == null)) {
                this.User_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_CreateOperationCompleted);
            }
            this.InvokeAsync("User_Create", new object[] {
                        remoteUser,
                        projectRoleId}, this.User_CreateOperationCompleted, userState);
        }
        
        private void OnUser_CreateOperationCompleted(object arg) {
            if ((this.User_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_CreateCompleted(this, new User_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/User_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteUser User_RetrieveById(int userId) {
            object[] results = this.Invoke("User_RetrieveById", new object[] {
                        userId});
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        public void User_RetrieveByIdAsync(int userId) {
            this.User_RetrieveByIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void User_RetrieveByIdAsync(int userId, object userState) {
            if ((this.User_RetrieveByIdOperationCompleted == null)) {
                this.User_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("User_RetrieveById", new object[] {
                        userId}, this.User_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnUser_RetrieveByIdOperationCompleted(object arg) {
            if ((this.User_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_RetrieveByIdCompleted(this, new User_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/User_RetrieveByUserName", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteUser User_RetrieveByUserName(string userName) {
            object[] results = this.Invoke("User_RetrieveByUserName", new object[] {
                        userName});
            return ((RemoteUser)(results[0]));
        }
        
        /// <remarks/>
        public void User_RetrieveByUserNameAsync(string userName) {
            this.User_RetrieveByUserNameAsync(userName, null);
        }
        
        /// <remarks/>
        public void User_RetrieveByUserNameAsync(string userName, object userState) {
            if ((this.User_RetrieveByUserNameOperationCompleted == null)) {
                this.User_RetrieveByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUser_RetrieveByUserNameOperationCompleted);
            }
            this.InvokeAsync("User_RetrieveByUserName", new object[] {
                        userName}, this.User_RetrieveByUserNameOperationCompleted, userState);
        }
        
        private void OnUser_RetrieveByUserNameOperationCompleted(object arg) {
            if ((this.User_RetrieveByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.User_RetrieveByUserNameCompleted(this, new User_RetrieveByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident[] Incident_Retrieve(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("Incident_Retrieve", new object[] {
                        remoteFilters,
                        remoteSort,
                        startingRow,
                        numberOfRows});
            return ((RemoteIncident[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveAsync(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows) {
            this.Incident_RetrieveAsync(remoteFilters, remoteSort, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveAsync(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows, object userState) {
            if ((this.Incident_RetrieveOperationCompleted == null)) {
                this.Incident_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Incident_Retrieve", new object[] {
                        remoteFilters,
                        remoteSort,
                        startingRow,
                        numberOfRows}, this.Incident_RetrieveOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveOperationCompleted(object arg) {
            if ((this.Incident_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveCompleted(this, new Incident_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveNew", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident[] Incident_RetrieveNew(System.DateTime creationDate) {
            object[] results = this.Invoke("Incident_RetrieveNew", new object[] {
                        creationDate});
            return ((RemoteIncident[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveNewAsync(System.DateTime creationDate) {
            this.Incident_RetrieveNewAsync(creationDate, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveNewAsync(System.DateTime creationDate, object userState) {
            if ((this.Incident_RetrieveNewOperationCompleted == null)) {
                this.Incident_RetrieveNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveNewOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveNew", new object[] {
                        creationDate}, this.Incident_RetrieveNewOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveNewOperationCompleted(object arg) {
            if ((this.Incident_RetrieveNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveNewCompleted(this, new Incident_RetrieveNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveForOwner", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident[] Incident_RetrieveForOwner() {
            object[] results = this.Invoke("Incident_RetrieveForOwner", new object[0]);
            return ((RemoteIncident[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveForOwnerAsync() {
            this.Incident_RetrieveForOwnerAsync(null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveForOwnerAsync(object userState) {
            if ((this.Incident_RetrieveForOwnerOperationCompleted == null)) {
                this.Incident_RetrieveForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveForOwnerOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveForOwner", new object[0], this.Incident_RetrieveForOwnerOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveForOwnerOperationCompleted(object arg) {
            if ((this.Incident_RetrieveForOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveForOwnerCompleted(this, new Incident_RetrieveForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveResolutions", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentResolution[] Incident_RetrieveResolutions(int incidentId) {
            object[] results = this.Invoke("Incident_RetrieveResolutions", new object[] {
                        incidentId});
            return ((RemoteIncidentResolution[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveResolutionsAsync(int incidentId) {
            this.Incident_RetrieveResolutionsAsync(incidentId, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveResolutionsAsync(int incidentId, object userState) {
            if ((this.Incident_RetrieveResolutionsOperationCompleted == null)) {
                this.Incident_RetrieveResolutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveResolutionsOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveResolutions", new object[] {
                        incidentId}, this.Incident_RetrieveResolutionsOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveResolutionsOperationCompleted(object arg) {
            if ((this.Incident_RetrieveResolutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveResolutionsCompleted(this, new Incident_RetrieveResolutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_AddResolutions", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentResolution[] Incident_AddResolutions(RemoteIncidentResolution[] remoteIncidentResolutions) {
            object[] results = this.Invoke("Incident_AddResolutions", new object[] {
                        remoteIncidentResolutions});
            return ((RemoteIncidentResolution[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_AddResolutionsAsync(RemoteIncidentResolution[] remoteIncidentResolutions) {
            this.Incident_AddResolutionsAsync(remoteIncidentResolutions, null);
        }
        
        /// <remarks/>
        public void Incident_AddResolutionsAsync(RemoteIncidentResolution[] remoteIncidentResolutions, object userState) {
            if ((this.Incident_AddResolutionsOperationCompleted == null)) {
                this.Incident_AddResolutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_AddResolutionsOperationCompleted);
            }
            this.InvokeAsync("Incident_AddResolutions", new object[] {
                        remoteIncidentResolutions}, this.Incident_AddResolutionsOperationCompleted, userState);
        }
        
        private void OnIncident_AddResolutionsOperationCompleted(object arg) {
            if ((this.Incident_AddResolutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_AddResolutionsCompleted(this, new Incident_AddResolutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident Incident_RetrieveById(int incidentId) {
            object[] results = this.Invoke("Incident_RetrieveById", new object[] {
                        incidentId});
            return ((RemoteIncident)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveByIdAsync(int incidentId) {
            this.Incident_RetrieveByIdAsync(incidentId, null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveByIdAsync(int incidentId, object userState) {
            if ((this.Incident_RetrieveByIdOperationCompleted == null)) {
                this.Incident_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveById", new object[] {
                        incidentId}, this.Incident_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Incident_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveByIdCompleted(this, new Incident_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Incident_Update(RemoteIncident remoteIncident) {
            this.Invoke("Incident_Update", new object[] {
                        remoteIncident});
        }
        
        /// <remarks/>
        public void Incident_UpdateAsync(RemoteIncident remoteIncident) {
            this.Incident_UpdateAsync(remoteIncident, null);
        }
        
        /// <remarks/>
        public void Incident_UpdateAsync(RemoteIncident remoteIncident, object userState) {
            if ((this.Incident_UpdateOperationCompleted == null)) {
                this.Incident_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_UpdateOperationCompleted);
            }
            this.InvokeAsync("Incident_Update", new object[] {
                        remoteIncident}, this.Incident_UpdateOperationCompleted, userState);
        }
        
        private void OnIncident_UpdateOperationCompleted(object arg) {
            if ((this.Incident_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncident Incident_Create(RemoteIncident remoteIncident) {
            object[] results = this.Invoke("Incident_Create", new object[] {
                        remoteIncident});
            return ((RemoteIncident)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_CreateAsync(RemoteIncident remoteIncident) {
            this.Incident_CreateAsync(remoteIncident, null);
        }
        
        /// <remarks/>
        public void Incident_CreateAsync(RemoteIncident remoteIncident, object userState) {
            if ((this.Incident_CreateOperationCompleted == null)) {
                this.Incident_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_CreateOperationCompleted);
            }
            this.InvokeAsync("Incident_Create", new object[] {
                        remoteIncident}, this.Incident_CreateOperationCompleted, userState);
        }
        
        private void OnIncident_CreateOperationCompleted(object arg) {
            if ((this.Incident_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_CreateCompleted(this, new Incident_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_AddSeverity", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentSeverity Incident_AddSeverity(RemoteIncidentSeverity remoteIncidentSeverity) {
            object[] results = this.Invoke("Incident_AddSeverity", new object[] {
                        remoteIncidentSeverity});
            return ((RemoteIncidentSeverity)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_AddSeverityAsync(RemoteIncidentSeverity remoteIncidentSeverity) {
            this.Incident_AddSeverityAsync(remoteIncidentSeverity, null);
        }
        
        /// <remarks/>
        public void Incident_AddSeverityAsync(RemoteIncidentSeverity remoteIncidentSeverity, object userState) {
            if ((this.Incident_AddSeverityOperationCompleted == null)) {
                this.Incident_AddSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_AddSeverityOperationCompleted);
            }
            this.InvokeAsync("Incident_AddSeverity", new object[] {
                        remoteIncidentSeverity}, this.Incident_AddSeverityOperationCompleted, userState);
        }
        
        private void OnIncident_AddSeverityOperationCompleted(object arg) {
            if ((this.Incident_AddSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_AddSeverityCompleted(this, new Incident_AddSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_AddType", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentType Incident_AddType(RemoteIncidentType remoteIncidentType) {
            object[] results = this.Invoke("Incident_AddType", new object[] {
                        remoteIncidentType});
            return ((RemoteIncidentType)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_AddTypeAsync(RemoteIncidentType remoteIncidentType) {
            this.Incident_AddTypeAsync(remoteIncidentType, null);
        }
        
        /// <remarks/>
        public void Incident_AddTypeAsync(RemoteIncidentType remoteIncidentType, object userState) {
            if ((this.Incident_AddTypeOperationCompleted == null)) {
                this.Incident_AddTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_AddTypeOperationCompleted);
            }
            this.InvokeAsync("Incident_AddType", new object[] {
                        remoteIncidentType}, this.Incident_AddTypeOperationCompleted, userState);
        }
        
        private void OnIncident_AddTypeOperationCompleted(object arg) {
            if ((this.Incident_AddTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_AddTypeCompleted(this, new Incident_AddTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_AddStatus", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentStatus Incident_AddStatus(RemoteIncidentStatus remoteIncidentStatus) {
            object[] results = this.Invoke("Incident_AddStatus", new object[] {
                        remoteIncidentStatus});
            return ((RemoteIncidentStatus)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_AddStatusAsync(RemoteIncidentStatus remoteIncidentStatus) {
            this.Incident_AddStatusAsync(remoteIncidentStatus, null);
        }
        
        /// <remarks/>
        public void Incident_AddStatusAsync(RemoteIncidentStatus remoteIncidentStatus, object userState) {
            if ((this.Incident_AddStatusOperationCompleted == null)) {
                this.Incident_AddStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_AddStatusOperationCompleted);
            }
            this.InvokeAsync("Incident_AddStatus", new object[] {
                        remoteIncidentStatus}, this.Incident_AddStatusOperationCompleted, userState);
        }
        
        private void OnIncident_AddStatusOperationCompleted(object arg) {
            if ((this.Incident_AddStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_AddStatusCompleted(this, new Incident_AddStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_AddPriority", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentPriority Incident_AddPriority(RemoteIncidentPriority remoteIncidentPriority) {
            object[] results = this.Invoke("Incident_AddPriority", new object[] {
                        remoteIncidentPriority});
            return ((RemoteIncidentPriority)(results[0]));
        }
        
        /// <remarks/>
        public void Incident_AddPriorityAsync(RemoteIncidentPriority remoteIncidentPriority) {
            this.Incident_AddPriorityAsync(remoteIncidentPriority, null);
        }
        
        /// <remarks/>
        public void Incident_AddPriorityAsync(RemoteIncidentPriority remoteIncidentPriority, object userState) {
            if ((this.Incident_AddPriorityOperationCompleted == null)) {
                this.Incident_AddPriorityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_AddPriorityOperationCompleted);
            }
            this.InvokeAsync("Incident_AddPriority", new object[] {
                        remoteIncidentPriority}, this.Incident_AddPriorityOperationCompleted, userState);
        }
        
        private void OnIncident_AddPriorityOperationCompleted(object arg) {
            if ((this.Incident_AddPriorityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_AddPriorityCompleted(this, new Incident_AddPriorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrievePriorities", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentPriority[] Incident_RetrievePriorities() {
            object[] results = this.Invoke("Incident_RetrievePriorities", new object[0]);
            return ((RemoteIncidentPriority[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrievePrioritiesAsync() {
            this.Incident_RetrievePrioritiesAsync(null);
        }
        
        /// <remarks/>
        public void Incident_RetrievePrioritiesAsync(object userState) {
            if ((this.Incident_RetrievePrioritiesOperationCompleted == null)) {
                this.Incident_RetrievePrioritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrievePrioritiesOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrievePriorities", new object[0], this.Incident_RetrievePrioritiesOperationCompleted, userState);
        }
        
        private void OnIncident_RetrievePrioritiesOperationCompleted(object arg) {
            if ((this.Incident_RetrievePrioritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrievePrioritiesCompleted(this, new Incident_RetrievePrioritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveSeverities", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentSeverity[] Incident_RetrieveSeverities() {
            object[] results = this.Invoke("Incident_RetrieveSeverities", new object[0]);
            return ((RemoteIncidentSeverity[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveSeveritiesAsync() {
            this.Incident_RetrieveSeveritiesAsync(null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveSeveritiesAsync(object userState) {
            if ((this.Incident_RetrieveSeveritiesOperationCompleted == null)) {
                this.Incident_RetrieveSeveritiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveSeveritiesOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveSeverities", new object[0], this.Incident_RetrieveSeveritiesOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveSeveritiesOperationCompleted(object arg) {
            if ((this.Incident_RetrieveSeveritiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveSeveritiesCompleted(this, new Incident_RetrieveSeveritiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveTypes", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentType[] Incident_RetrieveTypes() {
            object[] results = this.Invoke("Incident_RetrieveTypes", new object[0]);
            return ((RemoteIncidentType[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveTypesAsync() {
            this.Incident_RetrieveTypesAsync(null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveTypesAsync(object userState) {
            if ((this.Incident_RetrieveTypesOperationCompleted == null)) {
                this.Incident_RetrieveTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveTypesOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveTypes", new object[0], this.Incident_RetrieveTypesOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveTypesOperationCompleted(object arg) {
            if ((this.Incident_RetrieveTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveTypesCompleted(this, new Incident_RetrieveTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Incident_RetrieveStatuses", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteIncidentStatus[] Incident_RetrieveStatuses() {
            object[] results = this.Invoke("Incident_RetrieveStatuses", new object[0]);
            return ((RemoteIncidentStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void Incident_RetrieveStatusesAsync() {
            this.Incident_RetrieveStatusesAsync(null);
        }
        
        /// <remarks/>
        public void Incident_RetrieveStatusesAsync(object userState) {
            if ((this.Incident_RetrieveStatusesOperationCompleted == null)) {
                this.Incident_RetrieveStatusesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncident_RetrieveStatusesOperationCompleted);
            }
            this.InvokeAsync("Incident_RetrieveStatuses", new object[0], this.Incident_RetrieveStatusesOperationCompleted, userState);
        }
        
        private void OnIncident_RetrieveStatusesOperationCompleted(object arg) {
            if ((this.Incident_RetrieveStatusesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Incident_RetrieveStatusesCompleted(this, new Incident_RetrieveStatusesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease[] Release_Retrieve(bool activeOnly) {
            object[] results = this.Invoke("Release_Retrieve", new object[] {
                        activeOnly});
            return ((RemoteRelease[])(results[0]));
        }
        
        /// <remarks/>
        public void Release_RetrieveAsync(bool activeOnly) {
            this.Release_RetrieveAsync(activeOnly, null);
        }
        
        /// <remarks/>
        public void Release_RetrieveAsync(bool activeOnly, object userState) {
            if ((this.Release_RetrieveOperationCompleted == null)) {
                this.Release_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Release_Retrieve", new object[] {
                        activeOnly}, this.Release_RetrieveOperationCompleted, userState);
        }
        
        private void OnRelease_RetrieveOperationCompleted(object arg) {
            if ((this.Release_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_RetrieveCompleted(this, new Release_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Retrieve2", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease[] Release_Retrieve2(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("Release_Retrieve2", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows});
            return ((RemoteRelease[])(results[0]));
        }
        
        /// <remarks/>
        public void Release_Retrieve2Async(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            this.Release_Retrieve2Async(remoteFilters, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void Release_Retrieve2Async(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows, object userState) {
            if ((this.Release_Retrieve2OperationCompleted == null)) {
                this.Release_Retrieve2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_Retrieve2OperationCompleted);
            }
            this.InvokeAsync("Release_Retrieve2", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows}, this.Release_Retrieve2OperationCompleted, userState);
        }
        
        private void OnRelease_Retrieve2OperationCompleted(object arg) {
            if ((this.Release_Retrieve2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_Retrieve2Completed(this, new Release_Retrieve2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease Release_RetrieveById(int releaseId) {
            object[] results = this.Invoke("Release_RetrieveById", new object[] {
                        releaseId});
            return ((RemoteRelease)(results[0]));
        }
        
        /// <remarks/>
        public void Release_RetrieveByIdAsync(int releaseId) {
            this.Release_RetrieveByIdAsync(releaseId, null);
        }
        
        /// <remarks/>
        public void Release_RetrieveByIdAsync(int releaseId, object userState) {
            if ((this.Release_RetrieveByIdOperationCompleted == null)) {
                this.Release_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Release_RetrieveById", new object[] {
                        releaseId}, this.Release_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnRelease_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Release_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_RetrieveByIdCompleted(this, new Release_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Release_Update(RemoteRelease remoteRelease) {
            this.Invoke("Release_Update", new object[] {
                        remoteRelease});
        }
        
        /// <remarks/>
        public void Release_UpdateAsync(RemoteRelease remoteRelease) {
            this.Release_UpdateAsync(remoteRelease, null);
        }
        
        /// <remarks/>
        public void Release_UpdateAsync(RemoteRelease remoteRelease, object userState) {
            if ((this.Release_UpdateOperationCompleted == null)) {
                this.Release_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_UpdateOperationCompleted);
            }
            this.InvokeAsync("Release_Update", new object[] {
                        remoteRelease}, this.Release_UpdateOperationCompleted, userState);
        }
        
        private void OnRelease_UpdateOperationCompleted(object arg) {
            if ((this.Release_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_AddTestMapping", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Release_AddTestMapping(RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping) {
            this.Invoke("Release_AddTestMapping", new object[] {
                        remoteReleaseTestCaseMapping});
        }
        
        /// <remarks/>
        public void Release_AddTestMappingAsync(RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping) {
            this.Release_AddTestMappingAsync(remoteReleaseTestCaseMapping, null);
        }
        
        /// <remarks/>
        public void Release_AddTestMappingAsync(RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping, object userState) {
            if ((this.Release_AddTestMappingOperationCompleted == null)) {
                this.Release_AddTestMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_AddTestMappingOperationCompleted);
            }
            this.InvokeAsync("Release_AddTestMapping", new object[] {
                        remoteReleaseTestCaseMapping}, this.Release_AddTestMappingOperationCompleted, userState);
        }
        
        private void OnRelease_AddTestMappingOperationCompleted(object arg) {
            if ((this.Release_AddTestMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_AddTestMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_RemoveTestMapping", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Release_RemoveTestMapping(RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping) {
            this.Invoke("Release_RemoveTestMapping", new object[] {
                        remoteReleaseTestCaseMapping});
        }
        
        /// <remarks/>
        public void Release_RemoveTestMappingAsync(RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping) {
            this.Release_RemoveTestMappingAsync(remoteReleaseTestCaseMapping, null);
        }
        
        /// <remarks/>
        public void Release_RemoveTestMappingAsync(RemoteReleaseTestCaseMapping remoteReleaseTestCaseMapping, object userState) {
            if ((this.Release_RemoveTestMappingOperationCompleted == null)) {
                this.Release_RemoveTestMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_RemoveTestMappingOperationCompleted);
            }
            this.InvokeAsync("Release_RemoveTestMapping", new object[] {
                        remoteReleaseTestCaseMapping}, this.Release_RemoveTestMappingOperationCompleted, userState);
        }
        
        private void OnRelease_RemoveTestMappingOperationCompleted(object arg) {
            if ((this.Release_RemoveTestMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_RemoveTestMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Release_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRelease Release_Create(RemoteRelease remoteRelease, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentReleaseId) {
            object[] results = this.Invoke("Release_Create", new object[] {
                        remoteRelease,
                        parentReleaseId});
            return ((RemoteRelease)(results[0]));
        }
        
        /// <remarks/>
        public void Release_CreateAsync(RemoteRelease remoteRelease, System.Nullable<int> parentReleaseId) {
            this.Release_CreateAsync(remoteRelease, parentReleaseId, null);
        }
        
        /// <remarks/>
        public void Release_CreateAsync(RemoteRelease remoteRelease, System.Nullable<int> parentReleaseId, object userState) {
            if ((this.Release_CreateOperationCompleted == null)) {
                this.Release_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRelease_CreateOperationCompleted);
            }
            this.InvokeAsync("Release_Create", new object[] {
                        remoteRelease,
                        parentReleaseId}, this.Release_CreateOperationCompleted, userState);
        }
        
        private void OnRelease_CreateOperationCompleted(object arg) {
            if ((this.Release_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Release_CreateCompleted(this, new Release_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_Create1", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRequirement Requirement_Create1(RemoteRequirement remoteRequirement, int indentPosition) {
            object[] results = this.Invoke("Requirement_Create1", new object[] {
                        remoteRequirement,
                        indentPosition});
            return ((RemoteRequirement)(results[0]));
        }
        
        /// <remarks/>
        public void Requirement_Create1Async(RemoteRequirement remoteRequirement, int indentPosition) {
            this.Requirement_Create1Async(remoteRequirement, indentPosition, null);
        }
        
        /// <remarks/>
        public void Requirement_Create1Async(RemoteRequirement remoteRequirement, int indentPosition, object userState) {
            if ((this.Requirement_Create1OperationCompleted == null)) {
                this.Requirement_Create1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_Create1OperationCompleted);
            }
            this.InvokeAsync("Requirement_Create1", new object[] {
                        remoteRequirement,
                        indentPosition}, this.Requirement_Create1OperationCompleted, userState);
        }
        
        private void OnRequirement_Create1OperationCompleted(object arg) {
            if ((this.Requirement_Create1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_Create1Completed(this, new Requirement_Create1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_Create2", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRequirement Requirement_Create2(RemoteRequirement remoteRequirement, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentRequirementId) {
            object[] results = this.Invoke("Requirement_Create2", new object[] {
                        remoteRequirement,
                        parentRequirementId});
            return ((RemoteRequirement)(results[0]));
        }
        
        /// <remarks/>
        public void Requirement_Create2Async(RemoteRequirement remoteRequirement, System.Nullable<int> parentRequirementId) {
            this.Requirement_Create2Async(remoteRequirement, parentRequirementId, null);
        }
        
        /// <remarks/>
        public void Requirement_Create2Async(RemoteRequirement remoteRequirement, System.Nullable<int> parentRequirementId, object userState) {
            if ((this.Requirement_Create2OperationCompleted == null)) {
                this.Requirement_Create2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_Create2OperationCompleted);
            }
            this.InvokeAsync("Requirement_Create2", new object[] {
                        remoteRequirement,
                        parentRequirementId}, this.Requirement_Create2OperationCompleted, userState);
        }
        
        private void OnRequirement_Create2OperationCompleted(object arg) {
            if ((this.Requirement_Create2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_Create2Completed(this, new Requirement_Create2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_AddTestCoverage", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Requirement_AddTestCoverage(RemoteRequirementTestCaseMapping remoteReqTestCaseMapping) {
            this.Invoke("Requirement_AddTestCoverage", new object[] {
                        remoteReqTestCaseMapping});
        }
        
        /// <remarks/>
        public void Requirement_AddTestCoverageAsync(RemoteRequirementTestCaseMapping remoteReqTestCaseMapping) {
            this.Requirement_AddTestCoverageAsync(remoteReqTestCaseMapping, null);
        }
        
        /// <remarks/>
        public void Requirement_AddTestCoverageAsync(RemoteRequirementTestCaseMapping remoteReqTestCaseMapping, object userState) {
            if ((this.Requirement_AddTestCoverageOperationCompleted == null)) {
                this.Requirement_AddTestCoverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_AddTestCoverageOperationCompleted);
            }
            this.InvokeAsync("Requirement_AddTestCoverage", new object[] {
                        remoteReqTestCaseMapping}, this.Requirement_AddTestCoverageOperationCompleted, userState);
        }
        
        private void OnRequirement_AddTestCoverageOperationCompleted(object arg) {
            if ((this.Requirement_AddTestCoverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_AddTestCoverageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_RemoveTestCoverage", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Requirement_RemoveTestCoverage(RemoteRequirementTestCaseMapping remoteReqTestCaseMapping) {
            this.Invoke("Requirement_RemoveTestCoverage", new object[] {
                        remoteReqTestCaseMapping});
        }
        
        /// <remarks/>
        public void Requirement_RemoveTestCoverageAsync(RemoteRequirementTestCaseMapping remoteReqTestCaseMapping) {
            this.Requirement_RemoveTestCoverageAsync(remoteReqTestCaseMapping, null);
        }
        
        /// <remarks/>
        public void Requirement_RemoveTestCoverageAsync(RemoteRequirementTestCaseMapping remoteReqTestCaseMapping, object userState) {
            if ((this.Requirement_RemoveTestCoverageOperationCompleted == null)) {
                this.Requirement_RemoveTestCoverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_RemoveTestCoverageOperationCompleted);
            }
            this.InvokeAsync("Requirement_RemoveTestCoverage", new object[] {
                        remoteReqTestCaseMapping}, this.Requirement_RemoveTestCoverageOperationCompleted, userState);
        }
        
        private void OnRequirement_RemoveTestCoverageOperationCompleted(object arg) {
            if ((this.Requirement_RemoveTestCoverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_RemoveTestCoverageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_RetrieveForOwner", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRequirement[] Requirement_RetrieveForOwner() {
            object[] results = this.Invoke("Requirement_RetrieveForOwner", new object[0]);
            return ((RemoteRequirement[])(results[0]));
        }
        
        /// <remarks/>
        public void Requirement_RetrieveForOwnerAsync() {
            this.Requirement_RetrieveForOwnerAsync(null);
        }
        
        /// <remarks/>
        public void Requirement_RetrieveForOwnerAsync(object userState) {
            if ((this.Requirement_RetrieveForOwnerOperationCompleted == null)) {
                this.Requirement_RetrieveForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_RetrieveForOwnerOperationCompleted);
            }
            this.InvokeAsync("Requirement_RetrieveForOwner", new object[0], this.Requirement_RetrieveForOwnerOperationCompleted, userState);
        }
        
        private void OnRequirement_RetrieveForOwnerOperationCompleted(object arg) {
            if ((this.Requirement_RetrieveForOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_RetrieveForOwnerCompleted(this, new Requirement_RetrieveForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRequirement Requirement_RetrieveById(int requirementId) {
            object[] results = this.Invoke("Requirement_RetrieveById", new object[] {
                        requirementId});
            return ((RemoteRequirement)(results[0]));
        }
        
        /// <remarks/>
        public void Requirement_RetrieveByIdAsync(int requirementId) {
            this.Requirement_RetrieveByIdAsync(requirementId, null);
        }
        
        /// <remarks/>
        public void Requirement_RetrieveByIdAsync(int requirementId, object userState) {
            if ((this.Requirement_RetrieveByIdOperationCompleted == null)) {
                this.Requirement_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Requirement_RetrieveById", new object[] {
                        requirementId}, this.Requirement_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnRequirement_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Requirement_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_RetrieveByIdCompleted(this, new Requirement_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteRequirement[] Requirement_Retrieve(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("Requirement_Retrieve", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows});
            return ((RemoteRequirement[])(results[0]));
        }
        
        /// <remarks/>
        public void Requirement_RetrieveAsync(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            this.Requirement_RetrieveAsync(remoteFilters, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void Requirement_RetrieveAsync(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows, object userState) {
            if ((this.Requirement_RetrieveOperationCompleted == null)) {
                this.Requirement_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Requirement_Retrieve", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows}, this.Requirement_RetrieveOperationCompleted, userState);
        }
        
        private void OnRequirement_RetrieveOperationCompleted(object arg) {
            if ((this.Requirement_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_RetrieveCompleted(this, new Requirement_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Requirement_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Requirement_Update(RemoteRequirement remoteRequirement) {
            this.Invoke("Requirement_Update", new object[] {
                        remoteRequirement});
        }
        
        /// <remarks/>
        public void Requirement_UpdateAsync(RemoteRequirement remoteRequirement) {
            this.Requirement_UpdateAsync(remoteRequirement, null);
        }
        
        /// <remarks/>
        public void Requirement_UpdateAsync(RemoteRequirement remoteRequirement, object userState) {
            if ((this.Requirement_UpdateOperationCompleted == null)) {
                this.Requirement_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequirement_UpdateOperationCompleted);
            }
            this.InvokeAsync("Requirement_Update", new object[] {
                        remoteRequirement}, this.Requirement_UpdateOperationCompleted, userState);
        }
        
        private void OnRequirement_UpdateOperationCompleted(object arg) {
            if ((this.Requirement_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Requirement_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_CreateFolder", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase TestCase_CreateFolder(RemoteTestCase remoteTestCase, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentTestFolderId) {
            object[] results = this.Invoke("TestCase_CreateFolder", new object[] {
                        remoteTestCase,
                        parentTestFolderId});
            return ((RemoteTestCase)(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_CreateFolderAsync(RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId) {
            this.TestCase_CreateFolderAsync(remoteTestCase, parentTestFolderId, null);
        }
        
        /// <remarks/>
        public void TestCase_CreateFolderAsync(RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId, object userState) {
            if ((this.TestCase_CreateFolderOperationCompleted == null)) {
                this.TestCase_CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_CreateFolderOperationCompleted);
            }
            this.InvokeAsync("TestCase_CreateFolder", new object[] {
                        remoteTestCase,
                        parentTestFolderId}, this.TestCase_CreateFolderOperationCompleted, userState);
        }
        
        private void OnTestCase_CreateFolderOperationCompleted(object arg) {
            if ((this.TestCase_CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_CreateFolderCompleted(this, new TestCase_CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase TestCase_Create(RemoteTestCase remoteTestCase, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentTestFolderId) {
            object[] results = this.Invoke("TestCase_Create", new object[] {
                        remoteTestCase,
                        parentTestFolderId});
            return ((RemoteTestCase)(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_CreateAsync(RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId) {
            this.TestCase_CreateAsync(remoteTestCase, parentTestFolderId, null);
        }
        
        /// <remarks/>
        public void TestCase_CreateAsync(RemoteTestCase remoteTestCase, System.Nullable<int> parentTestFolderId, object userState) {
            if ((this.TestCase_CreateOperationCompleted == null)) {
                this.TestCase_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_CreateOperationCompleted);
            }
            this.InvokeAsync("TestCase_Create", new object[] {
                        remoteTestCase,
                        parentTestFolderId}, this.TestCase_CreateOperationCompleted, userState);
        }
        
        private void OnTestCase_CreateOperationCompleted(object arg) {
            if ((this.TestCase_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_CreateCompleted(this, new TestCase_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase[] TestCase_Retrieve(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("TestCase_Retrieve", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows});
            return ((RemoteTestCase[])(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_RetrieveAsync(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            this.TestCase_RetrieveAsync(remoteFilters, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void TestCase_RetrieveAsync(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows, object userState) {
            if ((this.TestCase_RetrieveOperationCompleted == null)) {
                this.TestCase_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_RetrieveOperationCompleted);
            }
            this.InvokeAsync("TestCase_Retrieve", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows}, this.TestCase_RetrieveOperationCompleted, userState);
        }
        
        private void OnTestCase_RetrieveOperationCompleted(object arg) {
            if ((this.TestCase_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_RetrieveCompleted(this, new TestCase_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_RetrieveByReleaseId", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase[] TestCase_RetrieveByReleaseId(int releaseId, RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("TestCase_RetrieveByReleaseId", new object[] {
                        releaseId,
                        remoteFilters,
                        startingRow,
                        numberOfRows});
            return ((RemoteTestCase[])(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_RetrieveByReleaseIdAsync(int releaseId, RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            this.TestCase_RetrieveByReleaseIdAsync(releaseId, remoteFilters, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void TestCase_RetrieveByReleaseIdAsync(int releaseId, RemoteFilter[] remoteFilters, int startingRow, int numberOfRows, object userState) {
            if ((this.TestCase_RetrieveByReleaseIdOperationCompleted == null)) {
                this.TestCase_RetrieveByReleaseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_RetrieveByReleaseIdOperationCompleted);
            }
            this.InvokeAsync("TestCase_RetrieveByReleaseId", new object[] {
                        releaseId,
                        remoteFilters,
                        startingRow,
                        numberOfRows}, this.TestCase_RetrieveByReleaseIdOperationCompleted, userState);
        }
        
        private void OnTestCase_RetrieveByReleaseIdOperationCompleted(object arg) {
            if ((this.TestCase_RetrieveByReleaseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_RetrieveByReleaseIdCompleted(this, new TestCase_RetrieveByReleaseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_RetrieveForOwner", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase[] TestCase_RetrieveForOwner() {
            object[] results = this.Invoke("TestCase_RetrieveForOwner", new object[0]);
            return ((RemoteTestCase[])(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_RetrieveForOwnerAsync() {
            this.TestCase_RetrieveForOwnerAsync(null);
        }
        
        /// <remarks/>
        public void TestCase_RetrieveForOwnerAsync(object userState) {
            if ((this.TestCase_RetrieveForOwnerOperationCompleted == null)) {
                this.TestCase_RetrieveForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_RetrieveForOwnerOperationCompleted);
            }
            this.InvokeAsync("TestCase_RetrieveForOwner", new object[0], this.TestCase_RetrieveForOwnerOperationCompleted, userState);
        }
        
        private void OnTestCase_RetrieveForOwnerOperationCompleted(object arg) {
            if ((this.TestCase_RetrieveForOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_RetrieveForOwnerCompleted(this, new TestCase_RetrieveForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase TestCase_RetrieveById(int testCaseId) {
            object[] results = this.Invoke("TestCase_RetrieveById", new object[] {
                        testCaseId});
            return ((RemoteTestCase)(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_RetrieveByIdAsync(int testCaseId) {
            this.TestCase_RetrieveByIdAsync(testCaseId, null);
        }
        
        /// <remarks/>
        public void TestCase_RetrieveByIdAsync(int testCaseId, object userState) {
            if ((this.TestCase_RetrieveByIdOperationCompleted == null)) {
                this.TestCase_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("TestCase_RetrieveById", new object[] {
                        testCaseId}, this.TestCase_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnTestCase_RetrieveByIdOperationCompleted(object arg) {
            if ((this.TestCase_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_RetrieveByIdCompleted(this, new TestCase_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_RetrieveByTestSetId", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCase[] TestCase_RetrieveByTestSetId(int testSetId) {
            object[] results = this.Invoke("TestCase_RetrieveByTestSetId", new object[] {
                        testSetId});
            return ((RemoteTestCase[])(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_RetrieveByTestSetIdAsync(int testSetId) {
            this.TestCase_RetrieveByTestSetIdAsync(testSetId, null);
        }
        
        /// <remarks/>
        public void TestCase_RetrieveByTestSetIdAsync(int testSetId, object userState) {
            if ((this.TestCase_RetrieveByTestSetIdOperationCompleted == null)) {
                this.TestCase_RetrieveByTestSetIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_RetrieveByTestSetIdOperationCompleted);
            }
            this.InvokeAsync("TestCase_RetrieveByTestSetId", new object[] {
                        testSetId}, this.TestCase_RetrieveByTestSetIdOperationCompleted, userState);
        }
        
        private void OnTestCase_RetrieveByTestSetIdOperationCompleted(object arg) {
            if ((this.TestCase_RetrieveByTestSetIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_RetrieveByTestSetIdCompleted(this, new TestCase_RetrieveByTestSetIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestCase_Update(RemoteTestCase remoteTestCase, RemoteTestStep[] remoteTestSteps) {
            this.Invoke("TestCase_Update", new object[] {
                        remoteTestCase,
                        remoteTestSteps});
        }
        
        /// <remarks/>
        public void TestCase_UpdateAsync(RemoteTestCase remoteTestCase, RemoteTestStep[] remoteTestSteps) {
            this.TestCase_UpdateAsync(remoteTestCase, remoteTestSteps, null);
        }
        
        /// <remarks/>
        public void TestCase_UpdateAsync(RemoteTestCase remoteTestCase, RemoteTestStep[] remoteTestSteps, object userState) {
            if ((this.TestCase_UpdateOperationCompleted == null)) {
                this.TestCase_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_UpdateOperationCompleted);
            }
            this.InvokeAsync("TestCase_Update", new object[] {
                        remoteTestCase,
                        remoteTestSteps}, this.TestCase_UpdateOperationCompleted, userState);
        }
        
        private void OnTestCase_UpdateOperationCompleted(object arg) {
            if ((this.TestCase_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_CreateParameterToken", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestCase_CreateParameterToken(string parameterName) {
            object[] results = this.Invoke("TestCase_CreateParameterToken", new object[] {
                        parameterName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_CreateParameterTokenAsync(string parameterName) {
            this.TestCase_CreateParameterTokenAsync(parameterName, null);
        }
        
        /// <remarks/>
        public void TestCase_CreateParameterTokenAsync(string parameterName, object userState) {
            if ((this.TestCase_CreateParameterTokenOperationCompleted == null)) {
                this.TestCase_CreateParameterTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_CreateParameterTokenOperationCompleted);
            }
            this.InvokeAsync("TestCase_CreateParameterToken", new object[] {
                        parameterName}, this.TestCase_CreateParameterTokenOperationCompleted, userState);
        }
        
        private void OnTestCase_CreateParameterTokenOperationCompleted(object arg) {
            if ((this.TestCase_CreateParameterTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_CreateParameterTokenCompleted(this, new TestCase_CreateParameterTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestCase_AddParameter", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestCaseParameter TestCase_AddParameter(RemoteTestCaseParameter remoteTestCaseParameter) {
            object[] results = this.Invoke("TestCase_AddParameter", new object[] {
                        remoteTestCaseParameter});
            return ((RemoteTestCaseParameter)(results[0]));
        }
        
        /// <remarks/>
        public void TestCase_AddParameterAsync(RemoteTestCaseParameter remoteTestCaseParameter) {
            this.TestCase_AddParameterAsync(remoteTestCaseParameter, null);
        }
        
        /// <remarks/>
        public void TestCase_AddParameterAsync(RemoteTestCaseParameter remoteTestCaseParameter, object userState) {
            if ((this.TestCase_AddParameterOperationCompleted == null)) {
                this.TestCase_AddParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCase_AddParameterOperationCompleted);
            }
            this.InvokeAsync("TestCase_AddParameter", new object[] {
                        remoteTestCaseParameter}, this.TestCase_AddParameterOperationCompleted, userState);
        }
        
        private void OnTestCase_AddParameterOperationCompleted(object arg) {
            if ((this.TestCase_AddParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCase_AddParameterCompleted(this, new TestCase_AddParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestStep_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestStep TestStep_Create(RemoteTestStep remoteTestStep, int testCaseId) {
            object[] results = this.Invoke("TestStep_Create", new object[] {
                        remoteTestStep,
                        testCaseId});
            return ((RemoteTestStep)(results[0]));
        }
        
        /// <remarks/>
        public void TestStep_CreateAsync(RemoteTestStep remoteTestStep, int testCaseId) {
            this.TestStep_CreateAsync(remoteTestStep, testCaseId, null);
        }
        
        /// <remarks/>
        public void TestStep_CreateAsync(RemoteTestStep remoteTestStep, int testCaseId, object userState) {
            if ((this.TestStep_CreateOperationCompleted == null)) {
                this.TestStep_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestStep_CreateOperationCompleted);
            }
            this.InvokeAsync("TestStep_Create", new object[] {
                        remoteTestStep,
                        testCaseId}, this.TestStep_CreateOperationCompleted, userState);
        }
        
        private void OnTestStep_CreateOperationCompleted(object arg) {
            if ((this.TestStep_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestStep_CreateCompleted(this, new TestStep_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestStep_CreateLink", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TestStep_CreateLink(int testCaseId, int position, int linkedTestCaseId, RemoteTestStepParameter[] parameters) {
            object[] results = this.Invoke("TestStep_CreateLink", new object[] {
                        testCaseId,
                        position,
                        linkedTestCaseId,
                        parameters});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestStep_CreateLinkAsync(int testCaseId, int position, int linkedTestCaseId, RemoteTestStepParameter[] parameters) {
            this.TestStep_CreateLinkAsync(testCaseId, position, linkedTestCaseId, parameters, null);
        }
        
        /// <remarks/>
        public void TestStep_CreateLinkAsync(int testCaseId, int position, int linkedTestCaseId, RemoteTestStepParameter[] parameters, object userState) {
            if ((this.TestStep_CreateLinkOperationCompleted == null)) {
                this.TestStep_CreateLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestStep_CreateLinkOperationCompleted);
            }
            this.InvokeAsync("TestStep_CreateLink", new object[] {
                        testCaseId,
                        position,
                        linkedTestCaseId,
                        parameters}, this.TestStep_CreateLinkOperationCompleted, userState);
        }
        
        private void OnTestStep_CreateLinkOperationCompleted(object arg) {
            if ((this.TestStep_CreateLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestStep_CreateLinkCompleted(this, new TestStep_CreateLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestStep_RetrieveByTestCaseId", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestStep[] TestStep_RetrieveByTestCaseId(int testCaseId) {
            object[] results = this.Invoke("TestStep_RetrieveByTestCaseId", new object[] {
                        testCaseId});
            return ((RemoteTestStep[])(results[0]));
        }
        
        /// <remarks/>
        public void TestStep_RetrieveByTestCaseIdAsync(int testCaseId) {
            this.TestStep_RetrieveByTestCaseIdAsync(testCaseId, null);
        }
        
        /// <remarks/>
        public void TestStep_RetrieveByTestCaseIdAsync(int testCaseId, object userState) {
            if ((this.TestStep_RetrieveByTestCaseIdOperationCompleted == null)) {
                this.TestStep_RetrieveByTestCaseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestStep_RetrieveByTestCaseIdOperationCompleted);
            }
            this.InvokeAsync("TestStep_RetrieveByTestCaseId", new object[] {
                        testCaseId}, this.TestStep_RetrieveByTestCaseIdOperationCompleted, userState);
        }
        
        private void OnTestStep_RetrieveByTestCaseIdOperationCompleted(object arg) {
            if ((this.TestStep_RetrieveByTestCaseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestStep_RetrieveByTestCaseIdCompleted(this, new TestStep_RetrieveByTestCaseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_CreateFromTestCases", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestRun TestRun_CreateFromTestCases(int[] testCaseIds, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> releaseId) {
            object[] results = this.Invoke("TestRun_CreateFromTestCases", new object[] {
                        testCaseIds,
                        releaseId});
            return ((RemoteTestRun)(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_CreateFromTestCasesAsync(int[] testCaseIds, System.Nullable<int> releaseId) {
            this.TestRun_CreateFromTestCasesAsync(testCaseIds, releaseId, null);
        }
        
        /// <remarks/>
        public void TestRun_CreateFromTestCasesAsync(int[] testCaseIds, System.Nullable<int> releaseId, object userState) {
            if ((this.TestRun_CreateFromTestCasesOperationCompleted == null)) {
                this.TestRun_CreateFromTestCasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_CreateFromTestCasesOperationCompleted);
            }
            this.InvokeAsync("TestRun_CreateFromTestCases", new object[] {
                        testCaseIds,
                        releaseId}, this.TestRun_CreateFromTestCasesOperationCompleted, userState);
        }
        
        private void OnTestRun_CreateFromTestCasesOperationCompleted(object arg) {
            if ((this.TestRun_CreateFromTestCasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_CreateFromTestCasesCompleted(this, new TestRun_CreateFromTestCasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_CreateFromTestSet", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestRun TestRun_CreateFromTestSet(int testSetId) {
            object[] results = this.Invoke("TestRun_CreateFromTestSet", new object[] {
                        testSetId});
            return ((RemoteTestRun)(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_CreateFromTestSetAsync(int testSetId) {
            this.TestRun_CreateFromTestSetAsync(testSetId, null);
        }
        
        /// <remarks/>
        public void TestRun_CreateFromTestSetAsync(int testSetId, object userState) {
            if ((this.TestRun_CreateFromTestSetOperationCompleted == null)) {
                this.TestRun_CreateFromTestSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_CreateFromTestSetOperationCompleted);
            }
            this.InvokeAsync("TestRun_CreateFromTestSet", new object[] {
                        testSetId}, this.TestRun_CreateFromTestSetOperationCompleted, userState);
        }
        
        private void OnTestRun_CreateFromTestSetOperationCompleted(object arg) {
            if ((this.TestRun_CreateFromTestSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_CreateFromTestSetCompleted(this, new TestRun_CreateFromTestSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestRun[] TestRun_Retrieve(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("TestRun_Retrieve", new object[] {
                        remoteFilters,
                        remoteSort,
                        startingRow,
                        numberOfRows});
            return ((RemoteTestRun[])(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_RetrieveAsync(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows) {
            this.TestRun_RetrieveAsync(remoteFilters, remoteSort, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void TestRun_RetrieveAsync(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows, object userState) {
            if ((this.TestRun_RetrieveOperationCompleted == null)) {
                this.TestRun_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_RetrieveOperationCompleted);
            }
            this.InvokeAsync("TestRun_Retrieve", new object[] {
                        remoteFilters,
                        remoteSort,
                        startingRow,
                        numberOfRows}, this.TestRun_RetrieveOperationCompleted, userState);
        }
        
        private void OnTestRun_RetrieveOperationCompleted(object arg) {
            if ((this.TestRun_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_RetrieveCompleted(this, new TestRun_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestRun TestRun_RetrieveById(int testRunId) {
            object[] results = this.Invoke("TestRun_RetrieveById", new object[] {
                        testRunId});
            return ((RemoteTestRun)(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_RetrieveByIdAsync(int testRunId) {
            this.TestRun_RetrieveByIdAsync(testRunId, null);
        }
        
        /// <remarks/>
        public void TestRun_RetrieveByIdAsync(int testRunId, object userState) {
            if ((this.TestRun_RetrieveByIdOperationCompleted == null)) {
                this.TestRun_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("TestRun_RetrieveById", new object[] {
                        testRunId}, this.TestRun_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnTestRun_RetrieveByIdOperationCompleted(object arg) {
            if ((this.TestRun_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_RetrieveByIdCompleted(this, new TestRun_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_RecordAutomated1", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestRun TestRun_RecordAutomated1(RemoteTestRun remoteTestRun) {
            object[] results = this.Invoke("TestRun_RecordAutomated1", new object[] {
                        remoteTestRun});
            return ((RemoteTestRun)(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_RecordAutomated1Async(RemoteTestRun remoteTestRun) {
            this.TestRun_RecordAutomated1Async(remoteTestRun, null);
        }
        
        /// <remarks/>
        public void TestRun_RecordAutomated1Async(RemoteTestRun remoteTestRun, object userState) {
            if ((this.TestRun_RecordAutomated1OperationCompleted == null)) {
                this.TestRun_RecordAutomated1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_RecordAutomated1OperationCompleted);
            }
            this.InvokeAsync("TestRun_RecordAutomated1", new object[] {
                        remoteTestRun}, this.TestRun_RecordAutomated1OperationCompleted, userState);
        }
        
        private void OnTestRun_RecordAutomated1OperationCompleted(object arg) {
            if ((this.TestRun_RecordAutomated1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_RecordAutomated1Completed(this, new TestRun_RecordAutomated1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_RecordAutomated2", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TestRun_RecordAutomated2(string userName, string password, int projectId, int testerUserId, int testCaseId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> releaseId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> testSetId, System.DateTime startDate, System.DateTime endDate, int executionStatusId, string runnerName, string runnerTestName, int runnerAssertCount, string runnerMessage, string runnerStackTrace) {
            object[] results = this.Invoke("TestRun_RecordAutomated2", new object[] {
                        userName,
                        password,
                        projectId,
                        testerUserId,
                        testCaseId,
                        releaseId,
                        testSetId,
                        startDate,
                        endDate,
                        executionStatusId,
                        runnerName,
                        runnerTestName,
                        runnerAssertCount,
                        runnerMessage,
                        runnerStackTrace});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_RecordAutomated2Async(string userName, string password, int projectId, int testerUserId, int testCaseId, System.Nullable<int> releaseId, System.Nullable<int> testSetId, System.DateTime startDate, System.DateTime endDate, int executionStatusId, string runnerName, string runnerTestName, int runnerAssertCount, string runnerMessage, string runnerStackTrace) {
            this.TestRun_RecordAutomated2Async(userName, password, projectId, testerUserId, testCaseId, releaseId, testSetId, startDate, endDate, executionStatusId, runnerName, runnerTestName, runnerAssertCount, runnerMessage, runnerStackTrace, null);
        }
        
        /// <remarks/>
        public void TestRun_RecordAutomated2Async(
                    string userName, 
                    string password, 
                    int projectId, 
                    int testerUserId, 
                    int testCaseId, 
                    System.Nullable<int> releaseId, 
                    System.Nullable<int> testSetId, 
                    System.DateTime startDate, 
                    System.DateTime endDate, 
                    int executionStatusId, 
                    string runnerName, 
                    string runnerTestName, 
                    int runnerAssertCount, 
                    string runnerMessage, 
                    string runnerStackTrace, 
                    object userState) {
            if ((this.TestRun_RecordAutomated2OperationCompleted == null)) {
                this.TestRun_RecordAutomated2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_RecordAutomated2OperationCompleted);
            }
            this.InvokeAsync("TestRun_RecordAutomated2", new object[] {
                        userName,
                        password,
                        projectId,
                        testerUserId,
                        testCaseId,
                        releaseId,
                        testSetId,
                        startDate,
                        endDate,
                        executionStatusId,
                        runnerName,
                        runnerTestName,
                        runnerAssertCount,
                        runnerMessage,
                        runnerStackTrace}, this.TestRun_RecordAutomated2OperationCompleted, userState);
        }
        
        private void OnTestRun_RecordAutomated2OperationCompleted(object arg) {
            if ((this.TestRun_RecordAutomated2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_RecordAutomated2Completed(this, new TestRun_RecordAutomated2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestRun_Save", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestRun TestRun_Save(RemoteTestRun remoteTestRun, System.DateTime endDate) {
            object[] results = this.Invoke("TestRun_Save", new object[] {
                        remoteTestRun,
                        endDate});
            return ((RemoteTestRun)(results[0]));
        }
        
        /// <remarks/>
        public void TestRun_SaveAsync(RemoteTestRun remoteTestRun, System.DateTime endDate) {
            this.TestRun_SaveAsync(remoteTestRun, endDate, null);
        }
        
        /// <remarks/>
        public void TestRun_SaveAsync(RemoteTestRun remoteTestRun, System.DateTime endDate, object userState) {
            if ((this.TestRun_SaveOperationCompleted == null)) {
                this.TestRun_SaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestRun_SaveOperationCompleted);
            }
            this.InvokeAsync("TestRun_Save", new object[] {
                        remoteTestRun,
                        endDate}, this.TestRun_SaveOperationCompleted, userState);
        }
        
        private void OnTestRun_SaveOperationCompleted(object arg) {
            if ((this.TestRun_SaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestRun_SaveCompleted(this, new TestRun_SaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_CreateFolder", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestSet TestSet_CreateFolder(RemoteTestSet remoteTestSet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentTestSetFolderId) {
            object[] results = this.Invoke("TestSet_CreateFolder", new object[] {
                        remoteTestSet,
                        parentTestSetFolderId});
            return ((RemoteTestSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestSet_CreateFolderAsync(RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId) {
            this.TestSet_CreateFolderAsync(remoteTestSet, parentTestSetFolderId, null);
        }
        
        /// <remarks/>
        public void TestSet_CreateFolderAsync(RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId, object userState) {
            if ((this.TestSet_CreateFolderOperationCompleted == null)) {
                this.TestSet_CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_CreateFolderOperationCompleted);
            }
            this.InvokeAsync("TestSet_CreateFolder", new object[] {
                        remoteTestSet,
                        parentTestSetFolderId}, this.TestSet_CreateFolderOperationCompleted, userState);
        }
        
        private void OnTestSet_CreateFolderOperationCompleted(object arg) {
            if ((this.TestSet_CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_CreateFolderCompleted(this, new TestSet_CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestSet TestSet_Create(RemoteTestSet remoteTestSet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> parentTestSetFolderId) {
            object[] results = this.Invoke("TestSet_Create", new object[] {
                        remoteTestSet,
                        parentTestSetFolderId});
            return ((RemoteTestSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestSet_CreateAsync(RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId) {
            this.TestSet_CreateAsync(remoteTestSet, parentTestSetFolderId, null);
        }
        
        /// <remarks/>
        public void TestSet_CreateAsync(RemoteTestSet remoteTestSet, System.Nullable<int> parentTestSetFolderId, object userState) {
            if ((this.TestSet_CreateOperationCompleted == null)) {
                this.TestSet_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_CreateOperationCompleted);
            }
            this.InvokeAsync("TestSet_Create", new object[] {
                        remoteTestSet,
                        parentTestSetFolderId}, this.TestSet_CreateOperationCompleted, userState);
        }
        
        private void OnTestSet_CreateOperationCompleted(object arg) {
            if ((this.TestSet_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_CreateCompleted(this, new TestSet_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestSet[] TestSet_Retrieve(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("TestSet_Retrieve", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows});
            return ((RemoteTestSet[])(results[0]));
        }
        
        /// <remarks/>
        public void TestSet_RetrieveAsync(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows) {
            this.TestSet_RetrieveAsync(remoteFilters, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void TestSet_RetrieveAsync(RemoteFilter[] remoteFilters, int startingRow, int numberOfRows, object userState) {
            if ((this.TestSet_RetrieveOperationCompleted == null)) {
                this.TestSet_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_RetrieveOperationCompleted);
            }
            this.InvokeAsync("TestSet_Retrieve", new object[] {
                        remoteFilters,
                        startingRow,
                        numberOfRows}, this.TestSet_RetrieveOperationCompleted, userState);
        }
        
        private void OnTestSet_RetrieveOperationCompleted(object arg) {
            if ((this.TestSet_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_RetrieveCompleted(this, new TestSet_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_RetrieveForOwner", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestSet[] TestSet_RetrieveForOwner() {
            object[] results = this.Invoke("TestSet_RetrieveForOwner", new object[0]);
            return ((RemoteTestSet[])(results[0]));
        }
        
        /// <remarks/>
        public void TestSet_RetrieveForOwnerAsync() {
            this.TestSet_RetrieveForOwnerAsync(null);
        }
        
        /// <remarks/>
        public void TestSet_RetrieveForOwnerAsync(object userState) {
            if ((this.TestSet_RetrieveForOwnerOperationCompleted == null)) {
                this.TestSet_RetrieveForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_RetrieveForOwnerOperationCompleted);
            }
            this.InvokeAsync("TestSet_RetrieveForOwner", new object[0], this.TestSet_RetrieveForOwnerOperationCompleted, userState);
        }
        
        private void OnTestSet_RetrieveForOwnerOperationCompleted(object arg) {
            if ((this.TestSet_RetrieveForOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_RetrieveForOwnerCompleted(this, new TestSet_RetrieveForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTestSet TestSet_RetrieveById(int testSetId) {
            object[] results = this.Invoke("TestSet_RetrieveById", new object[] {
                        testSetId});
            return ((RemoteTestSet)(results[0]));
        }
        
        /// <remarks/>
        public void TestSet_RetrieveByIdAsync(int testSetId) {
            this.TestSet_RetrieveByIdAsync(testSetId, null);
        }
        
        /// <remarks/>
        public void TestSet_RetrieveByIdAsync(int testSetId, object userState) {
            if ((this.TestSet_RetrieveByIdOperationCompleted == null)) {
                this.TestSet_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("TestSet_RetrieveById", new object[] {
                        testSetId}, this.TestSet_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnTestSet_RetrieveByIdOperationCompleted(object arg) {
            if ((this.TestSet_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_RetrieveByIdCompleted(this, new TestSet_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestSet_Update(RemoteTestSet remoteTestSet) {
            this.Invoke("TestSet_Update", new object[] {
                        remoteTestSet});
        }
        
        /// <remarks/>
        public void TestSet_UpdateAsync(RemoteTestSet remoteTestSet) {
            this.TestSet_UpdateAsync(remoteTestSet, null);
        }
        
        /// <remarks/>
        public void TestSet_UpdateAsync(RemoteTestSet remoteTestSet, object userState) {
            if ((this.TestSet_UpdateOperationCompleted == null)) {
                this.TestSet_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_UpdateOperationCompleted);
            }
            this.InvokeAsync("TestSet_Update", new object[] {
                        remoteTestSet}, this.TestSet_UpdateOperationCompleted, userState);
        }
        
        private void OnTestSet_UpdateOperationCompleted(object arg) {
            if ((this.TestSet_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_AddTestMapping", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestSet_AddTestMapping(RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping) {
            this.Invoke("TestSet_AddTestMapping", new object[] {
                        remoteTestSetTestCaseMapping});
        }
        
        /// <remarks/>
        public void TestSet_AddTestMappingAsync(RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping) {
            this.TestSet_AddTestMappingAsync(remoteTestSetTestCaseMapping, null);
        }
        
        /// <remarks/>
        public void TestSet_AddTestMappingAsync(RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping, object userState) {
            if ((this.TestSet_AddTestMappingOperationCompleted == null)) {
                this.TestSet_AddTestMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_AddTestMappingOperationCompleted);
            }
            this.InvokeAsync("TestSet_AddTestMapping", new object[] {
                        remoteTestSetTestCaseMapping}, this.TestSet_AddTestMappingOperationCompleted, userState);
        }
        
        private void OnTestSet_AddTestMappingOperationCompleted(object arg) {
            if ((this.TestSet_AddTestMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_AddTestMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/TestSet_RemoveTestMapping", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestSet_RemoveTestMapping(RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping) {
            this.Invoke("TestSet_RemoveTestMapping", new object[] {
                        remoteTestSetTestCaseMapping});
        }
        
        /// <remarks/>
        public void TestSet_RemoveTestMappingAsync(RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping) {
            this.TestSet_RemoveTestMappingAsync(remoteTestSetTestCaseMapping, null);
        }
        
        /// <remarks/>
        public void TestSet_RemoveTestMappingAsync(RemoteTestSetTestCaseMapping remoteTestSetTestCaseMapping, object userState) {
            if ((this.TestSet_RemoveTestMappingOperationCompleted == null)) {
                this.TestSet_RemoveTestMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestSet_RemoveTestMappingOperationCompleted);
            }
            this.InvokeAsync("TestSet_RemoveTestMapping", new object[] {
                        remoteTestSetTestCaseMapping}, this.TestSet_RemoveTestMappingOperationCompleted, userState);
        }
        
        private void OnTestSet_RemoveTestMappingOperationCompleted(object arg) {
            if ((this.TestSet_RemoveTestMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestSet_RemoveTestMappingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_RetrieveNew", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask[] Task_RetrieveNew(System.DateTime creationDate) {
            object[] results = this.Invoke("Task_RetrieveNew", new object[] {
                        creationDate});
            return ((RemoteTask[])(results[0]));
        }
        
        /// <remarks/>
        public void Task_RetrieveNewAsync(System.DateTime creationDate) {
            this.Task_RetrieveNewAsync(creationDate, null);
        }
        
        /// <remarks/>
        public void Task_RetrieveNewAsync(System.DateTime creationDate, object userState) {
            if ((this.Task_RetrieveNewOperationCompleted == null)) {
                this.Task_RetrieveNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_RetrieveNewOperationCompleted);
            }
            this.InvokeAsync("Task_RetrieveNew", new object[] {
                        creationDate}, this.Task_RetrieveNewOperationCompleted, userState);
        }
        
        private void OnTask_RetrieveNewOperationCompleted(object arg) {
            if ((this.Task_RetrieveNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_RetrieveNewCompleted(this, new Task_RetrieveNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_Retrieve", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask[] Task_Retrieve(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows) {
            object[] results = this.Invoke("Task_Retrieve", new object[] {
                        remoteFilters,
                        remoteSort,
                        startingRow,
                        numberOfRows});
            return ((RemoteTask[])(results[0]));
        }
        
        /// <remarks/>
        public void Task_RetrieveAsync(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows) {
            this.Task_RetrieveAsync(remoteFilters, remoteSort, startingRow, numberOfRows, null);
        }
        
        /// <remarks/>
        public void Task_RetrieveAsync(RemoteFilter[] remoteFilters, RemoteSort remoteSort, int startingRow, int numberOfRows, object userState) {
            if ((this.Task_RetrieveOperationCompleted == null)) {
                this.Task_RetrieveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_RetrieveOperationCompleted);
            }
            this.InvokeAsync("Task_Retrieve", new object[] {
                        remoteFilters,
                        remoteSort,
                        startingRow,
                        numberOfRows}, this.Task_RetrieveOperationCompleted, userState);
        }
        
        private void OnTask_RetrieveOperationCompleted(object arg) {
            if ((this.Task_RetrieveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_RetrieveCompleted(this, new Task_RetrieveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_RetrieveForOwner", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask[] Task_RetrieveForOwner() {
            object[] results = this.Invoke("Task_RetrieveForOwner", new object[0]);
            return ((RemoteTask[])(results[0]));
        }
        
        /// <remarks/>
        public void Task_RetrieveForOwnerAsync() {
            this.Task_RetrieveForOwnerAsync(null);
        }
        
        /// <remarks/>
        public void Task_RetrieveForOwnerAsync(object userState) {
            if ((this.Task_RetrieveForOwnerOperationCompleted == null)) {
                this.Task_RetrieveForOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_RetrieveForOwnerOperationCompleted);
            }
            this.InvokeAsync("Task_RetrieveForOwner", new object[0], this.Task_RetrieveForOwnerOperationCompleted, userState);
        }
        
        private void OnTask_RetrieveForOwnerOperationCompleted(object arg) {
            if ((this.Task_RetrieveForOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_RetrieveForOwnerCompleted(this, new Task_RetrieveForOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_RetrieveById", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask Task_RetrieveById(int taskId) {
            object[] results = this.Invoke("Task_RetrieveById", new object[] {
                        taskId});
            return ((RemoteTask)(results[0]));
        }
        
        /// <remarks/>
        public void Task_RetrieveByIdAsync(int taskId) {
            this.Task_RetrieveByIdAsync(taskId, null);
        }
        
        /// <remarks/>
        public void Task_RetrieveByIdAsync(int taskId, object userState) {
            if ((this.Task_RetrieveByIdOperationCompleted == null)) {
                this.Task_RetrieveByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_RetrieveByIdOperationCompleted);
            }
            this.InvokeAsync("Task_RetrieveById", new object[] {
                        taskId}, this.Task_RetrieveByIdOperationCompleted, userState);
        }
        
        private void OnTask_RetrieveByIdOperationCompleted(object arg) {
            if ((this.Task_RetrieveByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_RetrieveByIdCompleted(this, new Task_RetrieveByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_Update", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Task_Update(RemoteTask remoteTask) {
            this.Invoke("Task_Update", new object[] {
                        remoteTask});
        }
        
        /// <remarks/>
        public void Task_UpdateAsync(RemoteTask remoteTask) {
            this.Task_UpdateAsync(remoteTask, null);
        }
        
        /// <remarks/>
        public void Task_UpdateAsync(RemoteTask remoteTask, object userState) {
            if ((this.Task_UpdateOperationCompleted == null)) {
                this.Task_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_UpdateOperationCompleted);
            }
            this.InvokeAsync("Task_Update", new object[] {
                        remoteTask}, this.Task_UpdateOperationCompleted, userState);
        }
        
        private void OnTask_UpdateOperationCompleted(object arg) {
            if ((this.Task_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Task_Create", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteTask Task_Create(RemoteTask remoteTask) {
            object[] results = this.Invoke("Task_Create", new object[] {
                        remoteTask});
            return ((RemoteTask)(results[0]));
        }
        
        /// <remarks/>
        public void Task_CreateAsync(RemoteTask remoteTask) {
            this.Task_CreateAsync(remoteTask, null);
        }
        
        /// <remarks/>
        public void Task_CreateAsync(RemoteTask remoteTask, object userState) {
            if ((this.Task_CreateOperationCompleted == null)) {
                this.Task_CreateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTask_CreateOperationCompleted);
            }
            this.InvokeAsync("Task_Create", new object[] {
                        remoteTask}, this.Task_CreateOperationCompleted, userState);
        }
        
        private void OnTask_CreateOperationCompleted(object arg) {
            if ((this.Task_CreateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Task_CreateCompleted(this, new Task_CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveFieldValueMa" +
            "ppings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveFieldValueMappings(int dataSyncSystemId, int artifactFieldId) {
            object[] results = this.Invoke("DataMapping_RetrieveFieldValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactFieldId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveFieldValueMappingsAsync(int dataSyncSystemId, int artifactFieldId) {
            this.DataMapping_RetrieveFieldValueMappingsAsync(dataSyncSystemId, artifactFieldId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveFieldValueMappingsAsync(int dataSyncSystemId, int artifactFieldId, object userState) {
            if ((this.DataMapping_RetrieveFieldValueMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveFieldValueMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveFieldValueMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveFieldValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactFieldId}, this.DataMapping_RetrieveFieldValueMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveFieldValueMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveFieldValueMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveFieldValueMappingsCompleted(this, new DataMapping_RetrieveFieldValueMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveCustomProper" +
            "tyMapping", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping DataMapping_RetrieveCustomPropertyMapping(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            object[] results = this.Invoke("DataMapping_RetrieveCustomPropertyMapping", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId});
            return ((RemoteDataMapping)(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyMappingAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            this.DataMapping_RetrieveCustomPropertyMappingAsync(dataSyncSystemId, artifactTypeId, customPropertyId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyMappingAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId, object userState) {
            if ((this.DataMapping_RetrieveCustomPropertyMappingOperationCompleted == null)) {
                this.DataMapping_RetrieveCustomPropertyMappingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveCustomPropertyMappingOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveCustomPropertyMapping", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId}, this.DataMapping_RetrieveCustomPropertyMappingOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveCustomPropertyMappingOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveCustomPropertyMappingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveCustomPropertyMappingCompleted(this, new DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveCustomProper" +
            "tyValueMappings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveCustomPropertyValueMappings(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            object[] results = this.Invoke("DataMapping_RetrieveCustomPropertyValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyValueMappingsAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId) {
            this.DataMapping_RetrieveCustomPropertyValueMappingsAsync(dataSyncSystemId, artifactTypeId, customPropertyId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveCustomPropertyValueMappingsAsync(int dataSyncSystemId, int artifactTypeId, int customPropertyId, object userState) {
            if ((this.DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveCustomPropertyValueMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        customPropertyId}, this.DataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveCustomPropertyValueMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveCustomPropertyValueMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveCustomPropertyValueMappingsCompleted(this, new DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveProjectMappi" +
            "ngs", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveProjectMappings(int dataSyncSystemId) {
            object[] results = this.Invoke("DataMapping_RetrieveProjectMappings", new object[] {
                        dataSyncSystemId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveProjectMappingsAsync(int dataSyncSystemId) {
            this.DataMapping_RetrieveProjectMappingsAsync(dataSyncSystemId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveProjectMappingsAsync(int dataSyncSystemId, object userState) {
            if ((this.DataMapping_RetrieveProjectMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveProjectMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveProjectMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveProjectMappings", new object[] {
                        dataSyncSystemId}, this.DataMapping_RetrieveProjectMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveProjectMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveProjectMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveProjectMappingsCompleted(this, new DataMapping_RetrieveProjectMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveUserMappings" +
            "", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveUserMappings(int dataSyncSystemId) {
            object[] results = this.Invoke("DataMapping_RetrieveUserMappings", new object[] {
                        dataSyncSystemId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveUserMappingsAsync(int dataSyncSystemId) {
            this.DataMapping_RetrieveUserMappingsAsync(dataSyncSystemId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveUserMappingsAsync(int dataSyncSystemId, object userState) {
            if ((this.DataMapping_RetrieveUserMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveUserMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveUserMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveUserMappings", new object[] {
                        dataSyncSystemId}, this.DataMapping_RetrieveUserMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveUserMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveUserMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveUserMappingsCompleted(this, new DataMapping_RetrieveUserMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_AddUserMappings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMapping_AddUserMappings(int dataSyncSystemId, RemoteDataMapping[] remoteDataMappings) {
            this.Invoke("DataMapping_AddUserMappings", new object[] {
                        dataSyncSystemId,
                        remoteDataMappings});
        }
        
        /// <remarks/>
        public void DataMapping_AddUserMappingsAsync(int dataSyncSystemId, RemoteDataMapping[] remoteDataMappings) {
            this.DataMapping_AddUserMappingsAsync(dataSyncSystemId, remoteDataMappings, null);
        }
        
        /// <remarks/>
        public void DataMapping_AddUserMappingsAsync(int dataSyncSystemId, RemoteDataMapping[] remoteDataMappings, object userState) {
            if ((this.DataMapping_AddUserMappingsOperationCompleted == null)) {
                this.DataMapping_AddUserMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_AddUserMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_AddUserMappings", new object[] {
                        dataSyncSystemId,
                        remoteDataMappings}, this.DataMapping_AddUserMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_AddUserMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_AddUserMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_AddUserMappingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RetrieveArtifactMapp" +
            "ings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteDataMapping[] DataMapping_RetrieveArtifactMappings(int dataSyncSystemId, int artifactTypeId) {
            object[] results = this.Invoke("DataMapping_RetrieveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId});
            return ((RemoteDataMapping[])(results[0]));
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId) {
            this.DataMapping_RetrieveArtifactMappingsAsync(dataSyncSystemId, artifactTypeId, null);
        }
        
        /// <remarks/>
        public void DataMapping_RetrieveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, object userState) {
            if ((this.DataMapping_RetrieveArtifactMappingsOperationCompleted == null)) {
                this.DataMapping_RetrieveArtifactMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RetrieveArtifactMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RetrieveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId}, this.DataMapping_RetrieveArtifactMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RetrieveArtifactMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RetrieveArtifactMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RetrieveArtifactMappingsCompleted(this, new DataMapping_RetrieveArtifactMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_AddArtifactMappings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMapping_AddArtifactMappings(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.Invoke("DataMapping_AddArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings});
        }
        
        /// <remarks/>
        public void DataMapping_AddArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.DataMapping_AddArtifactMappingsAsync(dataSyncSystemId, artifactTypeId, remoteDataMappings, null);
        }
        
        /// <remarks/>
        public void DataMapping_AddArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings, object userState) {
            if ((this.DataMapping_AddArtifactMappingsOperationCompleted == null)) {
                this.DataMapping_AddArtifactMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_AddArtifactMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_AddArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings}, this.DataMapping_AddArtifactMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_AddArtifactMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_AddArtifactMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_AddArtifactMappingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/DataMapping_RemoveArtifactMappin" +
            "gs", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DataMapping_RemoveArtifactMappings(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.Invoke("DataMapping_RemoveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings});
        }
        
        /// <remarks/>
        public void DataMapping_RemoveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings) {
            this.DataMapping_RemoveArtifactMappingsAsync(dataSyncSystemId, artifactTypeId, remoteDataMappings, null);
        }
        
        /// <remarks/>
        public void DataMapping_RemoveArtifactMappingsAsync(int dataSyncSystemId, int artifactTypeId, RemoteDataMapping[] remoteDataMappings, object userState) {
            if ((this.DataMapping_RemoveArtifactMappingsOperationCompleted == null)) {
                this.DataMapping_RemoveArtifactMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataMapping_RemoveArtifactMappingsOperationCompleted);
            }
            this.InvokeAsync("DataMapping_RemoveArtifactMappings", new object[] {
                        dataSyncSystemId,
                        artifactTypeId,
                        remoteDataMappings}, this.DataMapping_RemoveArtifactMappingsOperationCompleted, userState);
        }
        
        private void OnDataMapping_RemoveArtifactMappingsOperationCompleted(object arg) {
            if ((this.DataMapping_RemoveArtifactMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataMapping_RemoveArtifactMappingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/CustomProperty_RetrieveProjectPr" +
            "operties", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteCustomProperty[] CustomProperty_RetrieveProjectProperties(int artifactTypeId) {
            object[] results = this.Invoke("CustomProperty_RetrieveProjectProperties", new object[] {
                        artifactTypeId});
            return ((RemoteCustomProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomProperty_RetrieveProjectPropertiesAsync(int artifactTypeId) {
            this.CustomProperty_RetrieveProjectPropertiesAsync(artifactTypeId, null);
        }
        
        /// <remarks/>
        public void CustomProperty_RetrieveProjectPropertiesAsync(int artifactTypeId, object userState) {
            if ((this.CustomProperty_RetrieveProjectPropertiesOperationCompleted == null)) {
                this.CustomProperty_RetrieveProjectPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomProperty_RetrieveProjectPropertiesOperationCompleted);
            }
            this.InvokeAsync("CustomProperty_RetrieveProjectProperties", new object[] {
                        artifactTypeId}, this.CustomProperty_RetrieveProjectPropertiesOperationCompleted, userState);
        }
        
        private void OnCustomProperty_RetrieveProjectPropertiesOperationCompleted(object arg) {
            if ((this.CustomProperty_RetrieveProjectPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomProperty_RetrieveProjectPropertiesCompleted(this, new CustomProperty_RetrieveProjectPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetProductVersion", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteVersion System_GetProductVersion() {
            object[] results = this.Invoke("System_GetProductVersion", new object[0]);
            return ((RemoteVersion)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetProductVersionAsync() {
            this.System_GetProductVersionAsync(null);
        }
        
        /// <remarks/>
        public void System_GetProductVersionAsync(object userState) {
            if ((this.System_GetProductVersionOperationCompleted == null)) {
                this.System_GetProductVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetProductVersionOperationCompleted);
            }
            this.InvokeAsync("System_GetProductVersion", new object[0], this.System_GetProductVersionOperationCompleted, userState);
        }
        
        private void OnSystem_GetProductVersionOperationCompleted(object arg) {
            if ((this.System_GetProductVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetProductVersionCompleted(this, new System_GetProductVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetSettings", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RemoteSetting[] System_GetSettings() {
            object[] results = this.Invoke("System_GetSettings", new object[0]);
            return ((RemoteSetting[])(results[0]));
        }
        
        /// <remarks/>
        public void System_GetSettingsAsync() {
            this.System_GetSettingsAsync(null);
        }
        
        /// <remarks/>
        public void System_GetSettingsAsync(object userState) {
            if ((this.System_GetSettingsOperationCompleted == null)) {
                this.System_GetSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetSettingsOperationCompleted);
            }
            this.InvokeAsync("System_GetSettings", new object[0], this.System_GetSettingsOperationCompleted, userState);
        }
        
        private void OnSystem_GetSettingsOperationCompleted(object arg) {
            if ((this.System_GetSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetSettingsCompleted(this, new System_GetSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetServerDateTime", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime System_GetServerDateTime() {
            object[] results = this.Invoke("System_GetServerDateTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetServerDateTimeAsync() {
            this.System_GetServerDateTimeAsync(null);
        }
        
        /// <remarks/>
        public void System_GetServerDateTimeAsync(object userState) {
            if ((this.System_GetServerDateTimeOperationCompleted == null)) {
                this.System_GetServerDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetServerDateTimeOperationCompleted);
            }
            this.InvokeAsync("System_GetServerDateTime", new object[0], this.System_GetServerDateTimeOperationCompleted, userState);
        }
        
        private void OnSystem_GetServerDateTimeOperationCompleted(object arg) {
            if ((this.System_GetServerDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetServerDateTimeCompleted(this, new System_GetServerDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetWebServerUrl", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string System_GetWebServerUrl() {
            object[] results = this.Invoke("System_GetWebServerUrl", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetWebServerUrlAsync() {
            this.System_GetWebServerUrlAsync(null);
        }
        
        /// <remarks/>
        public void System_GetWebServerUrlAsync(object userState) {
            if ((this.System_GetWebServerUrlOperationCompleted == null)) {
                this.System_GetWebServerUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetWebServerUrlOperationCompleted);
            }
            this.InvokeAsync("System_GetWebServerUrl", new object[0], this.System_GetWebServerUrlOperationCompleted, userState);
        }
        
        private void OnSystem_GetWebServerUrlOperationCompleted(object arg) {
            if ((this.System_GetWebServerUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetWebServerUrlCompleted(this, new System_GetWebServerUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/System_GetProductName", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string System_GetProductName() {
            object[] results = this.Invoke("System_GetProductName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void System_GetProductNameAsync() {
            this.System_GetProductNameAsync(null);
        }
        
        /// <remarks/>
        public void System_GetProductNameAsync(object userState) {
            if ((this.System_GetProductNameOperationCompleted == null)) {
                this.System_GetProductNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystem_GetProductNameOperationCompleted);
            }
            this.InvokeAsync("System_GetProductName", new object[0], this.System_GetProductNameOperationCompleted, userState);
        }
        
        private void OnSystem_GetProductNameOperationCompleted(object arg) {
            if ((this.System_GetProductNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.System_GetProductNameCompleted(this, new System_GetProductNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_Authenticate", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Connection_Authenticate(string userName, string password) {
            object[] results = this.Invoke("Connection_Authenticate", new object[] {
                        userName,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Connection_AuthenticateAsync(string userName, string password) {
            this.Connection_AuthenticateAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void Connection_AuthenticateAsync(string userName, string password, object userState) {
            if ((this.Connection_AuthenticateOperationCompleted == null)) {
                this.Connection_AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_AuthenticateOperationCompleted);
            }
            this.InvokeAsync("Connection_Authenticate", new object[] {
                        userName,
                        password}, this.Connection_AuthenticateOperationCompleted, userState);
        }
        
        private void OnConnection_AuthenticateOperationCompleted(object arg) {
            if ((this.Connection_AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_AuthenticateCompleted(this, new Connection_AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_Authenticate2", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Connection_Authenticate2(string userName, string password, string plugInName) {
            object[] results = this.Invoke("Connection_Authenticate2", new object[] {
                        userName,
                        password,
                        plugInName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Connection_Authenticate2Async(string userName, string password, string plugInName) {
            this.Connection_Authenticate2Async(userName, password, plugInName, null);
        }
        
        /// <remarks/>
        public void Connection_Authenticate2Async(string userName, string password, string plugInName, object userState) {
            if ((this.Connection_Authenticate2OperationCompleted == null)) {
                this.Connection_Authenticate2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_Authenticate2OperationCompleted);
            }
            this.InvokeAsync("Connection_Authenticate2", new object[] {
                        userName,
                        password,
                        plugInName}, this.Connection_Authenticate2OperationCompleted, userState);
        }
        
        private void OnConnection_Authenticate2OperationCompleted(object arg) {
            if ((this.Connection_Authenticate2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_Authenticate2Completed(this, new Connection_Authenticate2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_Disconnect", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Connection_Disconnect() {
            this.Invoke("Connection_Disconnect", new object[0]);
        }
        
        /// <remarks/>
        public void Connection_DisconnectAsync() {
            this.Connection_DisconnectAsync(null);
        }
        
        /// <remarks/>
        public void Connection_DisconnectAsync(object userState) {
            if ((this.Connection_DisconnectOperationCompleted == null)) {
                this.Connection_DisconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_DisconnectOperationCompleted);
            }
            this.InvokeAsync("Connection_Disconnect", new object[0], this.Connection_DisconnectOperationCompleted, userState);
        }
        
        private void OnConnection_DisconnectOperationCompleted(object arg) {
            if ((this.Connection_DisconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.inflectra.com/SpiraTest/Services/v2.2/Connection_ConnectToProject", RequestNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", ResponseNamespace="http://www.inflectra.com/SpiraTest/Services/v2.2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Connection_ConnectToProject(int projectId) {
            object[] results = this.Invoke("Connection_ConnectToProject", new object[] {
                        projectId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Connection_ConnectToProjectAsync(int projectId) {
            this.Connection_ConnectToProjectAsync(projectId, null);
        }
        
        /// <remarks/>
        public void Connection_ConnectToProjectAsync(int projectId, object userState) {
            if ((this.Connection_ConnectToProjectOperationCompleted == null)) {
                this.Connection_ConnectToProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConnection_ConnectToProjectOperationCompleted);
            }
            this.InvokeAsync("Connection_ConnectToProject", new object[] {
                        projectId}, this.Connection_ConnectToProjectOperationCompleted, userState);
        }
        
        private void OnConnection_ConnectToProjectOperationCompleted(object arg) {
            if ((this.Connection_ConnectToProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Connection_ConnectToProjectCompleted(this, new Connection_ConnectToProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteProject {
        
        private System.Nullable<int> projectIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string websiteField;
        
        private System.DateTime creationDateField;
        
        private bool activeField;
        
        private int workingHoursField;
        
        private int workingDaysField;
        
        private int nonWorkingHoursField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public int WorkingHours {
            get {
                return this.workingHoursField;
            }
            set {
                this.workingHoursField = value;
            }
        }
        
        /// <remarks/>
        public int WorkingDays {
            get {
                return this.workingDaysField;
            }
            set {
                this.workingDaysField = value;
            }
        }
        
        /// <remarks/>
        public int NonWorkingHours {
            get {
                return this.nonWorkingHoursField;
            }
            set {
                this.nonWorkingHoursField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteSetting {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteVersion {
        
        private string versionField;
        
        private System.Nullable<int> patchField;
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Patch {
            get {
                return this.patchField;
            }
            set {
                this.patchField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteCustomProperty {
        
        private int customPropertyIdField;
        
        private int projectIdField;
        
        private int artifactTypeIdField;
        
        private string aliasField;
        
        private System.Nullable<int> customPropertyListIdField;
        
        private string customPropertyNameField;
        
        private System.Nullable<int> customPropertyTypeIdField;
        
        private string customPropertyTypeNameField;
        
        /// <remarks/>
        public int CustomPropertyId {
            get {
                return this.customPropertyIdField;
            }
            set {
                this.customPropertyIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ArtifactTypeId {
            get {
                return this.artifactTypeIdField;
            }
            set {
                this.artifactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyListId {
            get {
                return this.customPropertyListIdField;
            }
            set {
                this.customPropertyListIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomPropertyName {
            get {
                return this.customPropertyNameField;
            }
            set {
                this.customPropertyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyTypeId {
            get {
                return this.customPropertyTypeIdField;
            }
            set {
                this.customPropertyTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string CustomPropertyTypeName {
            get {
                return this.customPropertyTypeNameField;
            }
            set {
                this.customPropertyTypeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteDataMapping {
        
        private System.Nullable<int> projectIdField;
        
        private int internalIdField;
        
        private string externalKeyField;
        
        private bool primaryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int InternalId {
            get {
                return this.internalIdField;
            }
            set {
                this.internalIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalKey {
            get {
                return this.externalKeyField;
            }
            set {
                this.externalKeyField = value;
            }
        }
        
        /// <remarks/>
        public bool Primary {
            get {
                return this.primaryField;
            }
            set {
                this.primaryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestSetTestCaseMapping {
        
        private int testSetIdField;
        
        private int testCaseIdField;
        
        /// <remarks/>
        public int TestSetId {
            get {
                return this.testSetIdField;
            }
            set {
                this.testSetIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestStepParameter {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestCaseParameter {
        
        private System.Nullable<int> testCaseParameterIdField;
        
        private int testCaseIdField;
        
        private string nameField;
        
        private string defaultValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestCaseParameterId {
            get {
                return this.testCaseParameterIdField;
            }
            set {
                this.testCaseParameterIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestStep {
        
        private System.Nullable<int> testStepIdField;
        
        private int testCaseIdField;
        
        private int executionStatusIdField;
        
        private int positionField;
        
        private string descriptionField;
        
        private string expectedResultField;
        
        private string sampleDataField;
        
        private System.Nullable<int> linkedTestCaseIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestStepId {
            get {
                return this.testStepIdField;
            }
            set {
                this.testStepIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int ExecutionStatusId {
            get {
                return this.executionStatusIdField;
            }
            set {
                this.executionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedResult {
            get {
                return this.expectedResultField;
            }
            set {
                this.expectedResultField = value;
            }
        }
        
        /// <remarks/>
        public string SampleData {
            get {
                return this.sampleDataField;
            }
            set {
                this.sampleDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LinkedTestCaseId {
            get {
                return this.linkedTestCaseIdField;
            }
            set {
                this.linkedTestCaseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteRequirementTestCaseMapping {
        
        private int requirementIdField;
        
        private int testCaseIdField;
        
        /// <remarks/>
        public int RequirementId {
            get {
                return this.requirementIdField;
            }
            set {
                this.requirementIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteReleaseTestCaseMapping {
        
        private int releaseIdField;
        
        private int testCaseIdField;
        
        /// <remarks/>
        public int ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncidentPriority {
        
        private System.Nullable<int> priorityIdField;
        
        private string nameField;
        
        private bool activeField;
        
        private string colorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PriorityId {
            get {
                return this.priorityIdField;
            }
            set {
                this.priorityIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncidentStatus {
        
        private System.Nullable<int> incidentStatusIdField;
        
        private string nameField;
        
        private bool activeField;
        
        private bool openField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IncidentStatusId {
            get {
                return this.incidentStatusIdField;
            }
            set {
                this.incidentStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool Open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncidentType {
        
        private System.Nullable<int> incidentTypeIdField;
        
        private string nameField;
        
        private bool activeField;
        
        private bool issueField;
        
        private bool riskField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IncidentTypeId {
            get {
                return this.incidentTypeIdField;
            }
            set {
                this.incidentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool Issue {
            get {
                return this.issueField;
            }
            set {
                this.issueField = value;
            }
        }
        
        /// <remarks/>
        public bool Risk {
            get {
                return this.riskField;
            }
            set {
                this.riskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncidentSeverity {
        
        private System.Nullable<int> severityIdField;
        
        private string nameField;
        
        private bool activeField;
        
        private string colorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SeverityId {
            get {
                return this.severityIdField;
            }
            set {
                this.severityIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Color {
            get {
                return this.colorField;
            }
            set {
                this.colorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncidentResolution {
        
        private System.Nullable<int> incidentResolutionIdField;
        
        private int incidentIdField;
        
        private int creatorIdField;
        
        private string resolutionField;
        
        private System.DateTime creationDateField;
        
        private string creatorNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IncidentResolutionId {
            get {
                return this.incidentResolutionIdField;
            }
            set {
                this.incidentResolutionIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentId {
            get {
                return this.incidentIdField;
            }
            set {
                this.incidentIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public string Resolution {
            get {
                return this.resolutionField;
            }
            set {
                this.resolutionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreatorName {
            get {
                return this.creatorNameField;
            }
            set {
                this.creatorNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestRunStep {
        
        private System.Nullable<int> testRunStepIdField;
        
        private int testRunIdField;
        
        private System.Nullable<int> testStepIdField;
        
        private System.Nullable<int> testCaseIdField;
        
        private int executionStatusIdField;
        
        private int positionField;
        
        private string descriptionField;
        
        private string expectedResultField;
        
        private string sampleDataField;
        
        private string actualResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestRunStepId {
            get {
                return this.testRunStepIdField;
            }
            set {
                this.testRunStepIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestStepId {
            get {
                return this.testStepIdField;
            }
            set {
                this.testStepIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int ExecutionStatusId {
            get {
                return this.executionStatusIdField;
            }
            set {
                this.executionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ExpectedResult {
            get {
                return this.expectedResultField;
            }
            set {
                this.expectedResultField = value;
            }
        }
        
        /// <remarks/>
        public string SampleData {
            get {
                return this.sampleDataField;
            }
            set {
                this.sampleDataField = value;
            }
        }
        
        /// <remarks/>
        public string ActualResult {
            get {
                return this.actualResultField;
            }
            set {
                this.actualResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteTask))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteTestSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteTestRun))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteTestCase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteRequirement))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteRelease))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteIncident))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteArtifact {
        
        private string text01Field;
        
        private string text02Field;
        
        private string text03Field;
        
        private string text04Field;
        
        private string text05Field;
        
        private string text06Field;
        
        private string text07Field;
        
        private string text08Field;
        
        private string text09Field;
        
        private string text10Field;
        
        private System.Nullable<int> list01Field;
        
        private System.Nullable<int> list02Field;
        
        private System.Nullable<int> list03Field;
        
        private System.Nullable<int> list04Field;
        
        private System.Nullable<int> list05Field;
        
        private System.Nullable<int> list06Field;
        
        private System.Nullable<int> list07Field;
        
        private System.Nullable<int> list08Field;
        
        private System.Nullable<int> list09Field;
        
        private System.Nullable<int> list10Field;
        
        /// <remarks/>
        public string Text01 {
            get {
                return this.text01Field;
            }
            set {
                this.text01Field = value;
            }
        }
        
        /// <remarks/>
        public string Text02 {
            get {
                return this.text02Field;
            }
            set {
                this.text02Field = value;
            }
        }
        
        /// <remarks/>
        public string Text03 {
            get {
                return this.text03Field;
            }
            set {
                this.text03Field = value;
            }
        }
        
        /// <remarks/>
        public string Text04 {
            get {
                return this.text04Field;
            }
            set {
                this.text04Field = value;
            }
        }
        
        /// <remarks/>
        public string Text05 {
            get {
                return this.text05Field;
            }
            set {
                this.text05Field = value;
            }
        }
        
        /// <remarks/>
        public string Text06 {
            get {
                return this.text06Field;
            }
            set {
                this.text06Field = value;
            }
        }
        
        /// <remarks/>
        public string Text07 {
            get {
                return this.text07Field;
            }
            set {
                this.text07Field = value;
            }
        }
        
        /// <remarks/>
        public string Text08 {
            get {
                return this.text08Field;
            }
            set {
                this.text08Field = value;
            }
        }
        
        /// <remarks/>
        public string Text09 {
            get {
                return this.text09Field;
            }
            set {
                this.text09Field = value;
            }
        }
        
        /// <remarks/>
        public string Text10 {
            get {
                return this.text10Field;
            }
            set {
                this.text10Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List01 {
            get {
                return this.list01Field;
            }
            set {
                this.list01Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List02 {
            get {
                return this.list02Field;
            }
            set {
                this.list02Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List03 {
            get {
                return this.list03Field;
            }
            set {
                this.list03Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List04 {
            get {
                return this.list04Field;
            }
            set {
                this.list04Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List05 {
            get {
                return this.list05Field;
            }
            set {
                this.list05Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List06 {
            get {
                return this.list06Field;
            }
            set {
                this.list06Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List07 {
            get {
                return this.list07Field;
            }
            set {
                this.list07Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List08 {
            get {
                return this.list08Field;
            }
            set {
                this.list08Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List09 {
            get {
                return this.list09Field;
            }
            set {
                this.list09Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> List10 {
            get {
                return this.list10Field;
            }
            set {
                this.list10Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTask : RemoteArtifact {
        
        private System.Nullable<int> taskIdField;
        
        private int taskStatusIdField;
        
        private int projectIdField;
        
        private System.Nullable<int> requirementIdField;
        
        private System.Nullable<int> releaseIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> taskPriorityIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private int completionPercentField;
        
        private System.Nullable<int> estimatedEffortField;
        
        private System.Nullable<int> actualEffortField;
        
        private string taskStatusNameField;
        
        private string ownerNameField;
        
        private string taskPriorityNameField;
        
        private string projectNameField;
        
        private string releaseVersionNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskId {
            get {
                return this.taskIdField;
            }
            set {
                this.taskIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaskStatusId {
            get {
                return this.taskStatusIdField;
            }
            set {
                this.taskStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RequirementId {
            get {
                return this.requirementIdField;
            }
            set {
                this.requirementIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskPriorityId {
            get {
                return this.taskPriorityIdField;
            }
            set {
                this.taskPriorityIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int CompletionPercent {
            get {
                return this.completionPercentField;
            }
            set {
                this.completionPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EstimatedEffort {
            get {
                return this.estimatedEffortField;
            }
            set {
                this.estimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ActualEffort {
            get {
                return this.actualEffortField;
            }
            set {
                this.actualEffortField = value;
            }
        }
        
        /// <remarks/>
        public string TaskStatusName {
            get {
                return this.taskStatusNameField;
            }
            set {
                this.taskStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public string TaskPriorityName {
            get {
                return this.taskPriorityNameField;
            }
            set {
                this.taskPriorityNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReleaseVersionNumber {
            get {
                return this.releaseVersionNumberField;
            }
            set {
                this.releaseVersionNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestSet : RemoteArtifact {
        
        private System.Nullable<int> testSetIdField;
        
        private int projectIdField;
        
        private int testSetStatusIdField;
        
        private int creatorIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> releaseIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private System.Nullable<System.DateTime> plannedDateField;
        
        private System.Nullable<System.DateTime> executionDateField;
        
        private bool folderField;
        
        private System.Nullable<int> countPassedField;
        
        private System.Nullable<int> countFailedField;
        
        private System.Nullable<int> countCautionField;
        
        private System.Nullable<int> countBlockedField;
        
        private System.Nullable<int> countNotRunField;
        
        private System.Nullable<int> countNotApplicableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestSetId {
            get {
                return this.testSetIdField;
            }
            set {
                this.testSetIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestSetStatusId {
            get {
                return this.testSetStatusIdField;
            }
            set {
                this.testSetStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PlannedDate {
            get {
                return this.plannedDateField;
            }
            set {
                this.plannedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExecutionDate {
            get {
                return this.executionDateField;
            }
            set {
                this.executionDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Folder {
            get {
                return this.folderField;
            }
            set {
                this.folderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountPassed {
            get {
                return this.countPassedField;
            }
            set {
                this.countPassedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountFailed {
            get {
                return this.countFailedField;
            }
            set {
                this.countFailedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountCaution {
            get {
                return this.countCautionField;
            }
            set {
                this.countCautionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountBlocked {
            get {
                return this.countBlockedField;
            }
            set {
                this.countBlockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountNotRun {
            get {
                return this.countNotRunField;
            }
            set {
                this.countNotRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountNotApplicable {
            get {
                return this.countNotApplicableField;
            }
            set {
                this.countNotApplicableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestRun : RemoteArtifact {
        
        private System.Nullable<int> testRunIdField;
        
        private string nameField;
        
        private int testCaseIdField;
        
        private int testRunTypeIdField;
        
        private int testerIdField;
        
        private int executionStatusIdField;
        
        private System.Nullable<int> releaseIdField;
        
        private System.Nullable<int> testSetIdField;
        
        private System.DateTime startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private string runnerNameField;
        
        private string runnerTestNameField;
        
        private System.Nullable<int> runnerAssertCountField;
        
        private string runnerMessageField;
        
        private string runnerStackTraceField;
        
        private RemoteTestRunStep[] testRunStepsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestRunId {
            get {
                return this.testRunIdField;
            }
            set {
                this.testRunIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int TestRunTypeId {
            get {
                return this.testRunTypeIdField;
            }
            set {
                this.testRunTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int TesterId {
            get {
                return this.testerIdField;
            }
            set {
                this.testerIdField = value;
            }
        }
        
        /// <remarks/>
        public int ExecutionStatusId {
            get {
                return this.executionStatusIdField;
            }
            set {
                this.executionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestSetId {
            get {
                return this.testSetIdField;
            }
            set {
                this.testSetIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string RunnerName {
            get {
                return this.runnerNameField;
            }
            set {
                this.runnerNameField = value;
            }
        }
        
        /// <remarks/>
        public string RunnerTestName {
            get {
                return this.runnerTestNameField;
            }
            set {
                this.runnerTestNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RunnerAssertCount {
            get {
                return this.runnerAssertCountField;
            }
            set {
                this.runnerAssertCountField = value;
            }
        }
        
        /// <remarks/>
        public string RunnerMessage {
            get {
                return this.runnerMessageField;
            }
            set {
                this.runnerMessageField = value;
            }
        }
        
        /// <remarks/>
        public string RunnerStackTrace {
            get {
                return this.runnerStackTraceField;
            }
            set {
                this.runnerStackTraceField = value;
            }
        }
        
        /// <remarks/>
        public RemoteTestRunStep[] TestRunSteps {
            get {
                return this.testRunStepsField;
            }
            set {
                this.testRunStepsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteTestCase : RemoteArtifact {
        
        private System.Nullable<int> testCaseIdField;
        
        private int projectIdField;
        
        private int executionStatusIdField;
        
        private int authorIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> testCasePriorityIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private System.Nullable<System.DateTime> executionDateField;
        
        private System.Nullable<int> estimatedDurationField;
        
        private bool folderField;
        
        private bool activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestCaseId {
            get {
                return this.testCaseIdField;
            }
            set {
                this.testCaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ExecutionStatusId {
            get {
                return this.executionStatusIdField;
            }
            set {
                this.executionStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int AuthorId {
            get {
                return this.authorIdField;
            }
            set {
                this.authorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestCasePriorityId {
            get {
                return this.testCasePriorityIdField;
            }
            set {
                this.testCasePriorityIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExecutionDate {
            get {
                return this.executionDateField;
            }
            set {
                this.executionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EstimatedDuration {
            get {
                return this.estimatedDurationField;
            }
            set {
                this.estimatedDurationField = value;
            }
        }
        
        /// <remarks/>
        public bool Folder {
            get {
                return this.folderField;
            }
            set {
                this.folderField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteRequirement : RemoteArtifact {
        
        private System.Nullable<int> requirementIdField;
        
        private int projectIdField;
        
        private int statusIdField;
        
        private int authorIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> importanceIdField;
        
        private System.Nullable<int> releaseIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private bool summaryField;
        
        private int coverageCountTotalField;
        
        private int coverageCountPassedField;
        
        private int coverageCountFailedField;
        
        private int coverageCountCautionField;
        
        private int coverageCountBlockedField;
        
        private System.Nullable<int> plannedEffortField;
        
        private System.Nullable<int> taskEstimatedEffortField;
        
        private System.Nullable<int> taskActualEffortField;
        
        private int taskCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RequirementId {
            get {
                return this.requirementIdField;
            }
            set {
                this.requirementIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int StatusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
        
        /// <remarks/>
        public int AuthorId {
            get {
                return this.authorIdField;
            }
            set {
                this.authorIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ImportanceId {
            get {
                return this.importanceIdField;
            }
            set {
                this.importanceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public int CoverageCountTotal {
            get {
                return this.coverageCountTotalField;
            }
            set {
                this.coverageCountTotalField = value;
            }
        }
        
        /// <remarks/>
        public int CoverageCountPassed {
            get {
                return this.coverageCountPassedField;
            }
            set {
                this.coverageCountPassedField = value;
            }
        }
        
        /// <remarks/>
        public int CoverageCountFailed {
            get {
                return this.coverageCountFailedField;
            }
            set {
                this.coverageCountFailedField = value;
            }
        }
        
        /// <remarks/>
        public int CoverageCountCaution {
            get {
                return this.coverageCountCautionField;
            }
            set {
                this.coverageCountCautionField = value;
            }
        }
        
        /// <remarks/>
        public int CoverageCountBlocked {
            get {
                return this.coverageCountBlockedField;
            }
            set {
                this.coverageCountBlockedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PlannedEffort {
            get {
                return this.plannedEffortField;
            }
            set {
                this.plannedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskEstimatedEffort {
            get {
                return this.taskEstimatedEffortField;
            }
            set {
                this.taskEstimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskActualEffort {
            get {
                return this.taskActualEffortField;
            }
            set {
                this.taskActualEffortField = value;
            }
        }
        
        /// <remarks/>
        public int TaskCount {
            get {
                return this.taskCountField;
            }
            set {
                this.taskCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteRelease : RemoteArtifact {
        
        private System.Nullable<int> releaseIdField;
        
        private int creatorIdField;
        
        private int projectIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string versionNumberField;
        
        private System.DateTime creationDateField;
        
        private System.DateTime lastUpdateDateField;
        
        private bool summaryField;
        
        private bool activeField;
        
        private bool iterationField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private int resourceCountField;
        
        private int daysNonWorkingField;
        
        private int plannedEffortField;
        
        private int availableEffortField;
        
        private System.Nullable<int> taskEstimatedEffortField;
        
        private System.Nullable<int> taskActualEffortField;
        
        private int taskCountField;
        
        private string creatorNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReleaseId {
            get {
                return this.releaseIdField;
            }
            set {
                this.releaseIdField = value;
            }
        }
        
        /// <remarks/>
        public int CreatorId {
            get {
                return this.creatorIdField;
            }
            set {
                this.creatorIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string VersionNumber {
            get {
                return this.versionNumberField;
            }
            set {
                this.versionNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        public bool Summary {
            get {
                return this.summaryField;
            }
            set {
                this.summaryField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool Iteration {
            get {
                return this.iterationField;
            }
            set {
                this.iterationField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int ResourceCount {
            get {
                return this.resourceCountField;
            }
            set {
                this.resourceCountField = value;
            }
        }
        
        /// <remarks/>
        public int DaysNonWorking {
            get {
                return this.daysNonWorkingField;
            }
            set {
                this.daysNonWorkingField = value;
            }
        }
        
        /// <remarks/>
        public int PlannedEffort {
            get {
                return this.plannedEffortField;
            }
            set {
                this.plannedEffortField = value;
            }
        }
        
        /// <remarks/>
        public int AvailableEffort {
            get {
                return this.availableEffortField;
            }
            set {
                this.availableEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskEstimatedEffort {
            get {
                return this.taskEstimatedEffortField;
            }
            set {
                this.taskEstimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TaskActualEffort {
            get {
                return this.taskActualEffortField;
            }
            set {
                this.taskActualEffortField = value;
            }
        }
        
        /// <remarks/>
        public int TaskCount {
            get {
                return this.taskCountField;
            }
            set {
                this.taskCountField = value;
            }
        }
        
        /// <remarks/>
        public string CreatorName {
            get {
                return this.creatorNameField;
            }
            set {
                this.creatorNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteIncident : RemoteArtifact {
        
        private System.Nullable<int> incidentIdField;
        
        private int projectIdField;
        
        private System.Nullable<int> priorityIdField;
        
        private System.Nullable<int> severityIdField;
        
        private int incidentStatusIdField;
        
        private int incidentTypeIdField;
        
        private int openerIdField;
        
        private System.Nullable<int> ownerIdField;
        
        private System.Nullable<int> testRunStepIdField;
        
        private System.Nullable<int> detectedReleaseIdField;
        
        private System.Nullable<int> resolvedReleaseIdField;
        
        private System.Nullable<int> verifiedReleaseIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private System.DateTime creationDateField;
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> closedDateField;
        
        private int completionPercentField;
        
        private System.Nullable<int> estimatedEffortField;
        
        private System.Nullable<int> actualEffortField;
        
        private System.DateTime lastUpdateDateField;
        
        private string priorityNameField;
        
        private string severityNameField;
        
        private string incidentStatusNameField;
        
        private string incidentTypeNameField;
        
        private string openerNameField;
        
        private string ownerNameField;
        
        private string projectNameField;
        
        private string detectedReleaseVersionNumberField;
        
        private string resolvedReleaseVersionNumberField;
        
        private string verifiedReleaseVersionNumberField;
        
        private System.Nullable<bool> incidentStatusOpenStatusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IncidentId {
            get {
                return this.incidentIdField;
            }
            set {
                this.incidentIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PriorityId {
            get {
                return this.priorityIdField;
            }
            set {
                this.priorityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SeverityId {
            get {
                return this.severityIdField;
            }
            set {
                this.severityIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentStatusId {
            get {
                return this.incidentStatusIdField;
            }
            set {
                this.incidentStatusIdField = value;
            }
        }
        
        /// <remarks/>
        public int IncidentTypeId {
            get {
                return this.incidentTypeIdField;
            }
            set {
                this.incidentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public int OpenerId {
            get {
                return this.openerIdField;
            }
            set {
                this.openerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> OwnerId {
            get {
                return this.ownerIdField;
            }
            set {
                this.ownerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TestRunStepId {
            get {
                return this.testRunStepIdField;
            }
            set {
                this.testRunStepIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DetectedReleaseId {
            get {
                return this.detectedReleaseIdField;
            }
            set {
                this.detectedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ResolvedReleaseId {
            get {
                return this.resolvedReleaseIdField;
            }
            set {
                this.resolvedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> VerifiedReleaseId {
            get {
                return this.verifiedReleaseIdField;
            }
            set {
                this.verifiedReleaseIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.closedDateField;
            }
            set {
                this.closedDateField = value;
            }
        }
        
        /// <remarks/>
        public int CompletionPercent {
            get {
                return this.completionPercentField;
            }
            set {
                this.completionPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EstimatedEffort {
            get {
                return this.estimatedEffortField;
            }
            set {
                this.estimatedEffortField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ActualEffort {
            get {
                return this.actualEffortField;
            }
            set {
                this.actualEffortField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdateDate {
            get {
                return this.lastUpdateDateField;
            }
            set {
                this.lastUpdateDateField = value;
            }
        }
        
        /// <remarks/>
        public string PriorityName {
            get {
                return this.priorityNameField;
            }
            set {
                this.priorityNameField = value;
            }
        }
        
        /// <remarks/>
        public string SeverityName {
            get {
                return this.severityNameField;
            }
            set {
                this.severityNameField = value;
            }
        }
        
        /// <remarks/>
        public string IncidentStatusName {
            get {
                return this.incidentStatusNameField;
            }
            set {
                this.incidentStatusNameField = value;
            }
        }
        
        /// <remarks/>
        public string IncidentTypeName {
            get {
                return this.incidentTypeNameField;
            }
            set {
                this.incidentTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public string OpenerName {
            get {
                return this.openerNameField;
            }
            set {
                this.openerNameField = value;
            }
        }
        
        /// <remarks/>
        public string OwnerName {
            get {
                return this.ownerNameField;
            }
            set {
                this.ownerNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectName {
            get {
                return this.projectNameField;
            }
            set {
                this.projectNameField = value;
            }
        }
        
        /// <remarks/>
        public string DetectedReleaseVersionNumber {
            get {
                return this.detectedReleaseVersionNumberField;
            }
            set {
                this.detectedReleaseVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ResolvedReleaseVersionNumber {
            get {
                return this.resolvedReleaseVersionNumberField;
            }
            set {
                this.resolvedReleaseVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string VerifiedReleaseVersionNumber {
            get {
                return this.verifiedReleaseVersionNumberField;
            }
            set {
                this.verifiedReleaseVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IncidentStatusOpenStatus {
            get {
                return this.incidentStatusOpenStatusField;
            }
            set {
                this.incidentStatusOpenStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteSort {
        
        private string propertyNameField;
        
        private bool sortAscendingField;
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        public bool SortAscending {
            get {
                return this.sortAscendingField;
            }
            set {
                this.sortAscendingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class DateRange {
        
        private System.Nullable<System.DateTime> startDateField;
        
        private System.Nullable<System.DateTime> endDateField;
        
        private bool considerTimesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public bool ConsiderTimes {
            get {
                return this.considerTimesField;
            }
            set {
                this.considerTimesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class MultiValueFilter {
        
        private int[] valuesField;
        
        private bool isNoneField;
        
        /// <remarks/>
        public int[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNone {
            get {
                return this.isNoneField;
            }
            set {
                this.isNoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteFilter {
        
        private string propertyNameField;
        
        private System.Nullable<int> intValueField;
        
        private string stringValueField;
        
        private MultiValueFilter multiValueField;
        
        private DateRange dateRangeValueField;
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IntValue {
            get {
                return this.intValueField;
            }
            set {
                this.intValueField = value;
            }
        }
        
        /// <remarks/>
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
        
        /// <remarks/>
        public MultiValueFilter MultiValue {
            get {
                return this.multiValueField;
            }
            set {
                this.multiValueField = value;
            }
        }
        
        /// <remarks/>
        public DateRange DateRangeValue {
            get {
                return this.dateRangeValueField;
            }
            set {
                this.dateRangeValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteUser {
        
        private System.Nullable<int> userIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string middleInitialField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string ldapDnField;
        
        private string emailAddressField;
        
        private bool adminField;
        
        private bool activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleInitial {
            get {
                return this.middleInitialField;
            }
            set {
                this.middleInitialField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string LdapDn {
            get {
                return this.ldapDnField;
            }
            set {
                this.ldapDnField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool Admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteDocument {
        
        private System.Nullable<int> attachmentIdField;
        
        private int attachmentTypeIdField;
        
        private System.Nullable<int> projectAttachmentTypeIdField;
        
        private System.Nullable<int> projectAttachmentFolderIdField;
        
        private System.Nullable<int> artifactTypeIdField;
        
        private System.Nullable<int> artifactIdField;
        
        private int authorIdField;
        
        private int editorIdField;
        
        private string filenameOrUrlField;
        
        private string descriptionField;
        
        private System.DateTime uploadDateField;
        
        private System.DateTime editedDateField;
        
        private int sizeField;
        
        private string currentVersionField;
        
        private string tagsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AttachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
            }
        }
        
        /// <remarks/>
        public int AttachmentTypeId {
            get {
                return this.attachmentTypeIdField;
            }
            set {
                this.attachmentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectAttachmentTypeId {
            get {
                return this.projectAttachmentTypeIdField;
            }
            set {
                this.projectAttachmentTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectAttachmentFolderId {
            get {
                return this.projectAttachmentFolderIdField;
            }
            set {
                this.projectAttachmentFolderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ArtifactTypeId {
            get {
                return this.artifactTypeIdField;
            }
            set {
                this.artifactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ArtifactId {
            get {
                return this.artifactIdField;
            }
            set {
                this.artifactIdField = value;
            }
        }
        
        /// <remarks/>
        public int AuthorId {
            get {
                return this.authorIdField;
            }
            set {
                this.authorIdField = value;
            }
        }
        
        /// <remarks/>
        public int EditorId {
            get {
                return this.editorIdField;
            }
            set {
                this.editorIdField = value;
            }
        }
        
        /// <remarks/>
        public string FilenameOrUrl {
            get {
                return this.filenameOrUrlField;
            }
            set {
                this.filenameOrUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UploadDate {
            get {
                return this.uploadDateField;
            }
            set {
                this.uploadDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EditedDate {
            get {
                return this.editedDateField;
            }
            set {
                this.editedDateField = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentVersion {
            get {
                return this.currentVersionField;
            }
            set {
                this.currentVersionField = value;
            }
        }
        
        /// <remarks/>
        public string Tags {
            get {
                return this.tagsField;
            }
            set {
                this.tagsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteProjectCustomProperty {
        
        private int customPropertyIdField;
        
        private int projectIdField;
        
        private int artifactTypeIdField;
        
        private string aliasField;
        
        private System.Nullable<int> customPropertyListIdField;
        
        /// <remarks/>
        public int CustomPropertyId {
            get {
                return this.customPropertyIdField;
            }
            set {
                this.customPropertyIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ArtifactTypeId {
            get {
                return this.artifactTypeIdField;
            }
            set {
                this.artifactTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyListId {
            get {
                return this.customPropertyListIdField;
            }
            set {
                this.customPropertyListIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteCustomListValue {
        
        private System.Nullable<int> customPropertyValueIdField;
        
        private int customPropertyListIdField;
        
        private string nameField;
        
        private bool activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyValueId {
            get {
                return this.customPropertyValueIdField;
            }
            set {
                this.customPropertyValueIdField = value;
            }
        }
        
        /// <remarks/>
        public int CustomPropertyListId {
            get {
                return this.customPropertyListIdField;
            }
            set {
                this.customPropertyListIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteCustomList {
        
        private System.Nullable<int> customPropertyListIdField;
        
        private int projectIdField;
        
        private string nameField;
        
        private bool activeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomPropertyListId {
            get {
                return this.customPropertyListIdField;
            }
            set {
                this.customPropertyListIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectId {
            get {
                return this.projectIdField;
            }
            set {
                this.projectIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.inflectra.com/SpiraTest/Services/v2.2/")]
    public partial class RemoteProjectRole {
        
        private System.Nullable<int> projectRoleIdField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool activeField;
        
        private bool adminField;
        
        private bool documentsAddField;
        
        private bool documentsEditField;
        
        private bool documentsDeleteField;
        
        private bool discussionsAddField;
        
        private bool sourceCodeViewField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ProjectRoleId {
            get {
                return this.projectRoleIdField;
            }
            set {
                this.projectRoleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool Admin {
            get {
                return this.adminField;
            }
            set {
                this.adminField = value;
            }
        }
        
        /// <remarks/>
        public bool DocumentsAdd {
            get {
                return this.documentsAddField;
            }
            set {
                this.documentsAddField = value;
            }
        }
        
        /// <remarks/>
        public bool DocumentsEdit {
            get {
                return this.documentsEditField;
            }
            set {
                this.documentsEditField = value;
            }
        }
        
        /// <remarks/>
        public bool DocumentsDelete {
            get {
                return this.documentsDeleteField;
            }
            set {
                this.documentsDeleteField = value;
            }
        }
        
        /// <remarks/>
        public bool DiscussionsAdd {
            get {
                return this.discussionsAddField;
            }
            set {
                this.discussionsAddField = value;
            }
        }
        
        /// <remarks/>
        public bool SourceCodeView {
            get {
                return this.sourceCodeViewField;
            }
            set {
                this.sourceCodeViewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_CreateCompletedEventHandler(object sender, Project_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteProject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteProject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_RetrieveCompletedEventHandler(object sender, Project_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteProject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteProject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProjectRole_RetrieveCompletedEventHandler(object sender, ProjectRole_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProjectRole_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProjectRole_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteProjectRole[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteProjectRole[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_RetrieveByIdCompletedEventHandler(object sender, Project_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteProject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteProject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_AddCustomListCompletedEventHandler(object sender, Project_AddCustomListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_AddCustomListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_AddCustomListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteCustomList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteCustomList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_AddCustomListValueCompletedEventHandler(object sender, Project_AddCustomListValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_AddCustomListValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_AddCustomListValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteCustomListValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteCustomListValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_RetrieveCustomPropertiesCompletedEventHandler(object sender, Project_RetrieveCustomPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Project_RetrieveCustomPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Project_RetrieveCustomPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteProjectCustomProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteProjectCustomProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Project_SaveCustomPropertiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Document_AddFileCompletedEventHandler(object sender, Document_AddFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Document_AddFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Document_AddFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Document_AddUrlCompletedEventHandler(object sender, Document_AddUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Document_AddUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Document_AddUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDocument Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDocument)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void User_CreateCompletedEventHandler(object sender, User_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class User_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal User_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void User_RetrieveByIdCompletedEventHandler(object sender, User_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class User_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal User_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void User_RetrieveByUserNameCompletedEventHandler(object sender, User_RetrieveByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class User_RetrieveByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal User_RetrieveByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveCompletedEventHandler(object sender, Incident_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveNewCompletedEventHandler(object sender, Incident_RetrieveNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveForOwnerCompletedEventHandler(object sender, Incident_RetrieveForOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveResolutionsCompletedEventHandler(object sender, Incident_RetrieveResolutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveResolutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveResolutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentResolution[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentResolution[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_AddResolutionsCompletedEventHandler(object sender, Incident_AddResolutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_AddResolutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_AddResolutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentResolution[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentResolution[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveByIdCompletedEventHandler(object sender, Incident_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_CreateCompletedEventHandler(object sender, Incident_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_AddSeverityCompletedEventHandler(object sender, Incident_AddSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_AddSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_AddSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentSeverity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentSeverity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_AddTypeCompletedEventHandler(object sender, Incident_AddTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_AddTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_AddTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_AddStatusCompletedEventHandler(object sender, Incident_AddStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_AddStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_AddStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_AddPriorityCompletedEventHandler(object sender, Incident_AddPriorityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_AddPriorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_AddPriorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentPriority Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentPriority)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrievePrioritiesCompletedEventHandler(object sender, Incident_RetrievePrioritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrievePrioritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrievePrioritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentPriority[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentPriority[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveSeveritiesCompletedEventHandler(object sender, Incident_RetrieveSeveritiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveSeveritiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveSeveritiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentSeverity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentSeverity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveTypesCompletedEventHandler(object sender, Incident_RetrieveTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Incident_RetrieveStatusesCompletedEventHandler(object sender, Incident_RetrieveStatusesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Incident_RetrieveStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Incident_RetrieveStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteIncidentStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteIncidentStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_RetrieveCompletedEventHandler(object sender, Release_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_Retrieve2CompletedEventHandler(object sender, Release_Retrieve2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_Retrieve2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_Retrieve2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_RetrieveByIdCompletedEventHandler(object sender, Release_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_AddTestMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_RemoveTestMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Release_CreateCompletedEventHandler(object sender, Release_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Release_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Release_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRelease Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRelease)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_Create1CompletedEventHandler(object sender, Requirement_Create1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Requirement_Create1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Requirement_Create1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRequirement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRequirement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_Create2CompletedEventHandler(object sender, Requirement_Create2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Requirement_Create2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Requirement_Create2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRequirement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRequirement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_AddTestCoverageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_RemoveTestCoverageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_RetrieveForOwnerCompletedEventHandler(object sender, Requirement_RetrieveForOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Requirement_RetrieveForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Requirement_RetrieveForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRequirement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRequirement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_RetrieveByIdCompletedEventHandler(object sender, Requirement_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Requirement_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Requirement_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRequirement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRequirement)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_RetrieveCompletedEventHandler(object sender, Requirement_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Requirement_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Requirement_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteRequirement[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteRequirement[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Requirement_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_CreateFolderCompletedEventHandler(object sender, TestCase_CreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_CreateCompletedEventHandler(object sender, TestCase_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_RetrieveCompletedEventHandler(object sender, TestCase_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_RetrieveByReleaseIdCompletedEventHandler(object sender, TestCase_RetrieveByReleaseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_RetrieveByReleaseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_RetrieveByReleaseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_RetrieveForOwnerCompletedEventHandler(object sender, TestCase_RetrieveForOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_RetrieveForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_RetrieveForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_RetrieveByIdCompletedEventHandler(object sender, TestCase_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_RetrieveByTestSetIdCompletedEventHandler(object sender, TestCase_RetrieveByTestSetIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_RetrieveByTestSetIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_RetrieveByTestSetIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCase[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCase[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_CreateParameterTokenCompletedEventHandler(object sender, TestCase_CreateParameterTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_CreateParameterTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_CreateParameterTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCase_AddParameterCompletedEventHandler(object sender, TestCase_AddParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestCase_AddParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestCase_AddParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestCaseParameter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestCaseParameter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestStep_CreateCompletedEventHandler(object sender, TestStep_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestStep_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestStep_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestStep Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestStep)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestStep_CreateLinkCompletedEventHandler(object sender, TestStep_CreateLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestStep_CreateLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestStep_CreateLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestStep_RetrieveByTestCaseIdCompletedEventHandler(object sender, TestStep_RetrieveByTestCaseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestStep_RetrieveByTestCaseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestStep_RetrieveByTestCaseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestStep[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestStep[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_CreateFromTestCasesCompletedEventHandler(object sender, TestRun_CreateFromTestCasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_CreateFromTestCasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_CreateFromTestCasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestRun Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestRun)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_CreateFromTestSetCompletedEventHandler(object sender, TestRun_CreateFromTestSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_CreateFromTestSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_CreateFromTestSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestRun Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestRun)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_RetrieveCompletedEventHandler(object sender, TestRun_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestRun[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestRun[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_RetrieveByIdCompletedEventHandler(object sender, TestRun_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestRun Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestRun)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_RecordAutomated1CompletedEventHandler(object sender, TestRun_RecordAutomated1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_RecordAutomated1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_RecordAutomated1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestRun Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestRun)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_RecordAutomated2CompletedEventHandler(object sender, TestRun_RecordAutomated2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_RecordAutomated2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_RecordAutomated2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestRun_SaveCompletedEventHandler(object sender, TestRun_SaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestRun_SaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestRun_SaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestRun Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestRun)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_CreateFolderCompletedEventHandler(object sender, TestSet_CreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSet_CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSet_CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_CreateCompletedEventHandler(object sender, TestSet_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSet_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSet_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_RetrieveCompletedEventHandler(object sender, TestSet_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSet_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSet_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_RetrieveForOwnerCompletedEventHandler(object sender, TestSet_RetrieveForOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSet_RetrieveForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSet_RetrieveForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_RetrieveByIdCompletedEventHandler(object sender, TestSet_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestSet_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestSet_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTestSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTestSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_AddTestMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestSet_RemoveTestMappingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_RetrieveNewCompletedEventHandler(object sender, Task_RetrieveNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_RetrieveNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_RetrieveNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_RetrieveCompletedEventHandler(object sender, Task_RetrieveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_RetrieveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_RetrieveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_RetrieveForOwnerCompletedEventHandler(object sender, Task_RetrieveForOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_RetrieveForOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_RetrieveForOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_RetrieveByIdCompletedEventHandler(object sender, Task_RetrieveByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_RetrieveByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_RetrieveByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Task_CreateCompletedEventHandler(object sender, Task_CreateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Task_CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Task_CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteTask Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteTask)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveFieldValueMappingsCompletedEventHandler(object sender, DataMapping_RetrieveFieldValueMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveFieldValueMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveFieldValueMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveCustomPropertyMappingCompletedEventHandler(object sender, DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveCustomPropertyMappingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventHandler(object sender, DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveCustomPropertyValueMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveProjectMappingsCompletedEventHandler(object sender, DataMapping_RetrieveProjectMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveProjectMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveProjectMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveUserMappingsCompletedEventHandler(object sender, DataMapping_RetrieveUserMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveUserMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveUserMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_AddUserMappingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RetrieveArtifactMappingsCompletedEventHandler(object sender, DataMapping_RetrieveArtifactMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataMapping_RetrieveArtifactMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataMapping_RetrieveArtifactMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteDataMapping[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteDataMapping[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_AddArtifactMappingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DataMapping_RemoveArtifactMappingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CustomProperty_RetrieveProjectPropertiesCompletedEventHandler(object sender, CustomProperty_RetrieveProjectPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomProperty_RetrieveProjectPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomProperty_RetrieveProjectPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteCustomProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteCustomProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetProductVersionCompletedEventHandler(object sender, System_GetProductVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetProductVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetProductVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteVersion Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteVersion)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetSettingsCompletedEventHandler(object sender, System_GetSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RemoteSetting[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RemoteSetting[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetServerDateTimeCompletedEventHandler(object sender, System_GetServerDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetServerDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetServerDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetWebServerUrlCompletedEventHandler(object sender, System_GetWebServerUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetWebServerUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetWebServerUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void System_GetProductNameCompletedEventHandler(object sender, System_GetProductNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class System_GetProductNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal System_GetProductNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_AuthenticateCompletedEventHandler(object sender, Connection_AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connection_AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connection_AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_Authenticate2CompletedEventHandler(object sender, Connection_Authenticate2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connection_Authenticate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connection_Authenticate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_DisconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Connection_ConnectToProjectCompletedEventHandler(object sender, Connection_ConnectToProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Connection_ConnectToProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Connection_ConnectToProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591